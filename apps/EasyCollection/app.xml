<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="EasyCollectionAppC" loc="1:EasyCollectionAppC.nc">
      <configuration/>
    </component>
    <component qname="EasyCollectionC" loc="3:EasyCollectionC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/LedsC.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CollectionC" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="112(CtpP.Forwarder):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
            <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40b5fdc8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40a74b40"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40a74dc8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40b5fdc8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40a74b40"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40a74dc8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40736288"/>
            <typename><typedef-ref name="TMilli" ref="0x40736450"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40c05b48"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40736288"/>
            <typename><typedef-ref name="TMilli" ref="0x40736450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40736288"/>
            <typename><typedef-ref name="TMilli" ref="0x40736450"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40736288"/>
            <typename><typedef-ref name="TMilli" ref="0x40736450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSnooperC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/RandomC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyActiveMessageP" loc="1:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/DummyActiveMessageP.nc">
      <module/>
    </component>
    <component qname="EasyCollectionAppC.CollectionSenderC" loc="43(EasyCollectionAppC.CollectionSenderC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="EasyCollectionAppC.CollectionSenderC.CollectionSenderP" loc="34(EasyCollectionAppC.CollectionSenderC.CollectionSenderP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="EasyCollectionAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(EasyCollectionAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="EasyCollectionAppC.TimerMilliC" loc="44(EasyCollectionAppC.TimerMilliC):/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40f7cc90" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40c05b48" loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40c05b48"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40c05d08" loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4080f0e8" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4080f310" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4080f538" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4080f728" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="112:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40b98a90" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40b5fdc8" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40b5fdc8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40b5c010" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x40b99010" loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40b7d408" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40b7d408"/></type-var>
        </typedef>
        <constant name="size" ref="0x40b7d5f8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4085e150" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4085e378" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4085e5a0" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4085e790" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40d05968" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40d05968"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40d05b48" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40df2418" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40800ce8" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40800f00" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x407fd148" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40e188d8" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40cf2138" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40cf2138"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40b8db10" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40b8db10"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40b8dd38" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40bfcdb0" loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40bfcdb0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40bf9010" loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40d526f8" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40dd2d60" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderP" loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x40f7d010" loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x40f7d228" loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40dd42b0" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderC" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40f4c4d0" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x40e3a088" loc="107:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x40e3a2c8" loc="107:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x40e3a508" loc="107:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40d31010" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40d31010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e43388" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/RootControl.nc">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x4075a7c8" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x4075a010" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x4075a408" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40732d58" loc="113:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40732c00" loc="113:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40730ae0" loc="138:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40730988" loc="138:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40732518" loc="104:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407302a8" loc="130:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x40a509f8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a508a0" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x40a4b950" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a4b1d0" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40a4b3c0" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40a4b5d8" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40a4b7e0" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x40a4c1c8" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a50e58" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x40a4c068" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40a6b5a8" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a4bda8" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40a6b010" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40a6b228" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40a6b438" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x40a4cd78" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a4c608" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x40a4c808" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x40a4ca08" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x40a4cc08" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40a40170" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a42df8" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40a40010" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40a43648" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a432e0" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a434e8" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40a423b8" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a42030" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40a42258" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40a48eb8" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a48d60" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40a429a8" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a42850" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40a43c20" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a43ac8" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
      <function command="" provided="0" name="neighborTableFind" ref="0x40a7c238" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a7c0e0" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txAck" ref="0x40a5c058" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a5dee0" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x40a5d4a8" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a5d350" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x40a5c608" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a5c4b0" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printNeigborTable" ref="0x40a7c648" loc="81:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x40a5eea8" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a5ed50" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40a7cbc0" loc="86:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a7ca68" loc="86:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x40a5cbc8" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a5ca70" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x40a5da98" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a5d940" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x40a5e8b0" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a5e758" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x40e33e90" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e33d38" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40e2f060" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e30cf0" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40e30ee0" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40e33750" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e333d0" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e335f0" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40e30758" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e30600" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40e35de8" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e35a68" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e35c88" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x40e30010" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e32c08" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40e32e10" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40e32650" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e324f8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x40e354b0" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e35130" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e35350" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40735520" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40a9b010" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a9b010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40a9ac98" loc="97:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
        <documentation loc="91:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a9b010"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40a9bef8" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
        <documentation loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40a9b4b0" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
        <documentation loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40a9a538" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
        <documentation loc="82:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a9b010"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40a9a3e0" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a9b010"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40a9b9c0" loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
        <documentation loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40713550" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40713a68" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x40c34ef8" loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x40c33400" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40c34ae0" loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40c338c0" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40c34010" loc="21:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd4e08"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40bd3048"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40c34600" loc="27:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd4e08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40bd3048"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40c344a8" loc="27:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd4e08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40bd3048"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x408f4970" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x40214918"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f4818" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Intercept.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40a49ea0" loc="31:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Intercept.nc">
        <documentation loc="16:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a49978" loc="31:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Intercept.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40a49b58" loc="31:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Intercept.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a49d38" loc="31:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x408f02a0" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f0148" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x408f0c70" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f0b18" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408efc00" loc="126:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ef8a0" loc="126:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408efa80" loc="126:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408ef2b8" loc="106:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x408ed8f8" loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ed5b8" loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408ed798" loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40bdd0c0" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40bdd0c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40bdd5a0" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40a82e38" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a82e38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40aa0070" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a82e38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40aa0f28" loc="90:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
        <documentation loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a82e38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40aa0dd0" loc="90:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a82e38"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40212840"/>
              <value-structured>
                <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x40212840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40a9f830" loc="101:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
        <documentation loc="92:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a82e38"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a9f6d8" loc="101:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40aa1c18" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
        <documentation loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40aa0718" loc="81:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
        <documentation loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a82e38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40aa1318" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40aa1760" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408dde90" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x408dd930" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x408ddb48" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408ddd28" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408d9a88" loc="135:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d9728" loc="135:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408d9908" loc="135:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408d91c8" loc="123:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408dab80" loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408daa28" loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408d8898" loc="110:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d8540" loc="110:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408d8738" loc="110:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMSend.nc">
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Random.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40ab1770" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Random.nc">
        <documentation loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40ab12c8" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Random.nc">
        <documentation loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x40c16cc8" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd7a98"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40bd7cc0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40c122b8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd1cd0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40bd1ef8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40c137d0" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd2590"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40bd27b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40c13dd8" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd2590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40bd27b8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40c13c80" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd2590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40bd27b8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40c128c0" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd1cd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40bd1ef8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40c12768" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd1cd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40bd1ef8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40c13318" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd7a98"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40bd7cc0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c131c0" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd7a98"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40bd7cc0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40743270" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
        <documentation loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40744f08" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40743110" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4073fdd0" loc="125:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
        <documentation loc="115:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073fa70" loc="125:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4073fc50" loc="125:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4073f510" loc="112:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
        <documentation loc="102:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40743eb0" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
        <documentation loc="77:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40743d58" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40742ba0" loc="100:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
        <documentation loc="91:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40742848" loc="100:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40742a40" loc="100:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Send.nc">
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40a941d8" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a941d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40a94798" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
        <documentation loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a941d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40a94640" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a941d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40a931f0" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
        <documentation loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40a94d80" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
        <documentation loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a941d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40a94c28" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a941d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x40a52010" loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a53e38" loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x40a546e0" loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x40a539a8" loc="95:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x40a56c58" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40a566a0" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x40a56548" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x40a541c8" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x40a54f28" loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a54bc0" loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x40a54dc8" loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40a52ba8" loc="98:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a52a50" loc="98:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40a56018" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40a47ea8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x40a52600" loc="97:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a524a8" loc="97:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x40a53540" loc="93:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a533e8" loc="93:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40f3c5d8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40f3c5d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40f3cc28" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40f3c5d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40f3cad0" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40f3c5d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40a00790" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x409ff018" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40a00c00" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40a002a0" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40995f28" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40a00140" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40be57e0" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40be57e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40be5948" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40c09c78" loc="109:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40c0a950" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40c09630" loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40c092e0" loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
          </variable>
          <variable name="dt" ref="0x40c094d0" loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40c0adc0" loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40c08138" loc="116:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40c0a010" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40be5e20" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40be5948"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c0a4f0" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Init.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x407d40f8" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Init.nc">
        <documentation loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40c15788" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c15788"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40c0e708" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40c106b0" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40c15c80" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c15788"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40c10ab8" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40c0eb68" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c10270" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c15788"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40c10118" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c15788"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40c10ec0" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c0e2e0" loc="68:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40759a00" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
              <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407594b8" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40759698" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40759878" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x40def820" loc="9:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SendBusy.nc">
        <documentation loc="3:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x408b38d0" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x408b3778" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x408b2a38" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0x40034498"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x408b2500" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x408b26d8" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408b28d0" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0x40034498"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x408b01a8" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408b2dc8" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x408b33a0" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x408b20f8" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x408b3d00" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40a44ee8" loc="7:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40a4f4b0" loc="14:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40a4f358" loc="14:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40a803d8" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40a80790" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40a83ec8" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40a80b28" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c0b620" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c0b620"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40c0b788" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c0b788"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40c0bc70" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c0b788"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40c046a8" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40c041a8" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40c04aa8" loc="82:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x407e01a8" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x407e0590" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x407e19d0" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x407e0d60" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407e1d90" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x407e0968" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407e1290" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x407e1620" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4073c1a8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4073c5f0" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4073ca70" loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4073a2f8" loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4074f010" loc="100:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4074f4b8" loc="117:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4073ce98" loc="77:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4074fbf8" loc="134:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4074faa0" loc="134:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4073dd48" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4073a778" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4073aba0" loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x408ebd80" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ebc28" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x408fb9c8" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408fb870" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x408fa460" loc="85:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408fa308" loc="85:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x40a3aaf8" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3a7a0" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40a3a998" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x40a3e620" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3e2a0" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40a3e4c0" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40a3b028" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3ccc0" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40a3ceb0" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40a3bd48" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3b9e0" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a3bbe8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40a3fe40" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3faa0" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40a3fce0" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40a3c8e0" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3c788" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40a3b5e0" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3b488" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40a5a7b0" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a5a478" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40a5a650" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDest" ref="0x40a584f0" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a58188" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a58390" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40a3f680" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3f2e0" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40a3f520" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x40a597b8" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40a59448" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40a59658" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40a3eba0" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3ea48" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40a3a350" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3a1f8" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x40a59010" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40a5ac80" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40a5ae90" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40a5a090" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3af28" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDest" ref="0x40a59d68" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a59c10" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40a3c350" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3c010" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40a3c1f0" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x40940b78" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40940010" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x40940238" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40940410" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x40940648" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x40940800" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x409409f8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x4093e420" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093e2c8" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x4093f568" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x4093f998" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x4093f168" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4093f010" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x4093fec8" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093fd70" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x4093e9a8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093e850" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x40d4b4b0" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d4ecc8" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40d4b168" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d4b348" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408f3a88" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x408f3528" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x408f3740" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408f3920" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x4090b200" loc="85:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090b0a8" loc="85:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4090d240" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090d0e8" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4090db88" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090d830" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4090da28" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
            <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
              <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x4090b848" loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090b6f0" loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40c1ed80" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40c1ed80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40c18560" loc="98:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40c1acb8" loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40c1b2b8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40c1ed80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40c18af0" loc="104:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40c18998" loc="104:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40c17010" loc="110:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40c1a090" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40c1bc60" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40c18138" loc="93:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c1b830" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40c1ed80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40c1b6d8" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40c1ed80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40c1a498" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c1a890" loc="81:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x408ff088" loc="177:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408e4f08" loc="177:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x408e9930" loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408e97d8" loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x408db870" loc="68:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408dbf08" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408dbdb0" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408e7238" loc="121:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408e8eb0" loc="121:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408e70d8" loc="121:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408e8530" loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408e81c8" loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408e83d0" loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x408e6a28" loc="147:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408e68d0" loc="147:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x408e4580" loc="162:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408e4250" loc="162:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x408e4420" loc="162:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408e7dd8" loc="136:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408e7c80" loc="136:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x408ffd08" loc="187:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408ff9a8" loc="187:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408ffba8" loc="187:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x408fc5a0" loc="195:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40734c50" loc="95:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40744138" loc="105:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
            <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40714bf8" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403ea538" loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x403ea070" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40d481c0" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d48068" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
                <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4074d308" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4074d308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40749a28" loc="136:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4074c8a8" loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4074aa00" loc="114:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4074a6b8" loc="114:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4074a8a0" loc="114:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4074a210" loc="98:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x407483e8" loc="151:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40749e70" loc="144:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4074cd38" loc="92:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4074d960" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4074d808" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40749408" loc="129:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407490c0" loc="129:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407492a8" loc="129:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4074c010" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4074dea0" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4074c4e0" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x40a576e0" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <struct loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.h" ref="0x40736288" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x40736398" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h" ref="0x406e6518" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h" ref="0x40a7a998" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0x402100f8" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0x40210358" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x402103b8" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <union loc="54:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40366da8" defined="" size="I:24" alignment="I:4">
      <field name="__data" ref="0x40366eb8" bit-offset="I:0" size="I:24">
        <type-tag size="I:24" alignment="I:4"><struct-ref name="__pthread_mutex_s" ref="0x40367c10"/></type-tag>
      </field>
      <field name="__size" ref="0x40366f18" bit-offset="I:0" size="I:24">
        <type-array elements="I:24" size="I:24" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40366f78" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="120:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407c3260" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="185:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bf6398" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="98:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd7a98" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40bd7ba8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40bd7c08" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bd7628"/></type-tag>
      </field>
    </union>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x40658f50" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0x406563a8" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0x4035a980"/></type-tag>
      </field>
      <field name="it_value" ref="0x40656408" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0x4035a980"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="18:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimRadioMsg.h" ref="0x406e73e8" defined="" size="I:4" alignment="I:1">
      <field name="strength" ref="0x406e7978" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x402fd5a0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x406e79d8" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x406e7a38" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.h" ref="0x407366c8" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x407367d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="90:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd82f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="gain_entry" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_gain.h" ref="0x4060d930" defined="" size="I:16" alignment="I:4">
      <field name="mote" ref="0x4060ddf8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x4060de58" bit-offset="I:32" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x4060deb8" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x4060d930"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h" ref="0x40733170" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_gain_noise" loc="3:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_gain.c" ref="0x40618db8" defined="" size="I:16" alignment="I:4">
      <field name="mean" ref="0x40617158" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x406171b8" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x40033c28" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="31:/usr/include/i386-linux-gnu/bits/time.h" ref="0x4035aec8" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0x4035f2b0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0x4034c5c0"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x4035f310" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__suseconds_t" ref="0x4034ca98"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="296:/usr/include/math.h" ref="0x404a5a90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="4:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h" ref="0x40a33e30" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40be0600" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40034b28" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x40034d80" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="number"  loc="NONE" ref="0x40030cf0" size="V:" alignment="V:">
    </attribute>
    <struct loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.h" ref="0x40736b08" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x40736c18" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h" ref="0x40a2edd8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="node" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/heap.c" ref="0x405884f8" defined="" size="I:12" alignment="I:4">
      <field name="data" ref="0x40588848" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x405888a8" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct loc="123:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd49e8" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x40bd4af8" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x40bd4b58" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x40bd4bb8" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x40bd4c18" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40bd4c78" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h" ref="0x406e5670" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="300:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40be9e40" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x40be9f50" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x40be8010" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x40be8070" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x40be80d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x40be8130" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x40be8190" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40be81f0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="serial_packet" loc="132:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h" ref="0x406f5710" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x406f5b98" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x406f7a88"/>
          <typename><typedef-ref name="serial_header_t" ref="0x406f5508"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x406f5bf8" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct loc="99:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h" ref="0x40a74b40" defined="" size="I:8" alignment="I:4">
      <field name="msg" ref="0x40a74c50" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
            <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="client" ref="0x40a74cb0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="retries" ref="0x40a74d10" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="integer"  loc="NONE" ref="0x40030b88" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/tos.h" ref="0x40541410" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/platform_message.h" ref="0x406f4d00" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x406f3050" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x406e8d80"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x406e71d0"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="25:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h" ref="0x40a31cb8" defined="" size="I:8" alignment="I:2">
      <field name="neighbor" ref="0x40a31dc8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
        </type-int>
      </field>
      <field name="info" ref="0x40a31e28" bit-offset="I:16" size="I:6">
        <type-tag size="I:6" alignment="I:2"><struct-ref ref="0x40a314f8"/>
          <typename><typedef-ref name="route_info_t" ref="0x40a317e0"/></typename>
        </type-tag>
      </field>
    </struct>
    <nx_struct loc="82:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h" ref="0x40a29110" defined="" size="I:5" alignment="I:1">
      <field name="options" ref="0x40a29220" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_ctp_options_t" ref="0x40a2ddc8"/></typename>
        </type-int>
      </field>
      <field name="parent" ref="0x40a29280" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="etx" ref="0x40a292e0" bit-offset="I:24" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x40a29340" bit-offset="I:40" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <union name="message_metadata" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/platform_message.h" ref="0x406f3330" defined="" size="I:4" alignment="I:1">
      <field name="tossim" ref="0x406f3698" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x406e73e8"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x406e7af0"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x40033890" size="V:" alignment="V:">
      <field name="fn" ref="0x400339a0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="418:/usr/include/stdlib.h" ref="0x4037f010" defined="" size="I:24" alignment="I:4">
      <field name="__x" ref="0x4037f7c8" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x4037f828" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x4037f888" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x4037f8e8" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x4037f948" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct loc="31:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h" ref="0x40a2f5f0" defined="" size="I:204" alignment="I:2">
      <field name="neighbor" ref="0x40a2f700" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
        </type-int>
      </field>
      <field name="sons" ref="0x40a2f760" bit-offset="I:16" size="I:200">
        <type-array elements="I:100" size="I:200" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="activeSons" ref="0x40a2f7c0" bit-offset="I:1616" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__locale_struct" loc="28:/usr/include/xlocale.h" ref="0x40313838" defined="" size="I:116" alignment="I:4">
      <field name="__locales" ref="0x403123f8" bit-offset="I:0" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0x403139d0"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x40312458" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x403124b8" bit-offset="I:448" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x40312518" bit-offset="I:480" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x40312578" bit-offset="I:512" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <nx_struct loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h" ref="0x40a8f168" defined="" size="I:6" alignment="I:1">
      <field name="msg_uid" ref="0x40a8f278" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
      <field name="origin" ref="0x40a8f2d8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="other_node" ref="0x40a8f338" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="167:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bf6010" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40bf6120" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40bf6180" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bf7b58"/></type-tag>
      </field>
    </union>
    <nx_struct name="serial_header" loc="124:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h" ref="0x406f7a88" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x406f52d0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x406f5330" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x406f5390" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x406f53f0" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x406ebc80"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x406f5450" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x406eb8e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union name="message_header" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/platform_message.h" ref="0x406f4520" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x406f49d8" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x406e8118"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x406e8b78"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x406f4a38" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x406f7a88"/>
          <typename><typedef-ref name="serial_header_t" ref="0x406f5508"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x4035a980" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0x4035ace0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0x4034c5c0"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x4035ad40" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40210d88" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x40210f38" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="119:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40371200" defined="" size="I:32" alignment="I:4">
      <field name="__data" ref="0x40371310" bit-offset="I:0" size="I:32">
        <type-tag size="I:32" alignment="I:4"><struct-ref ref="0x4036d8d8"/></type-tag>
      </field>
      <field name="__size" ref="0x40371370" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x403713d0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40210748" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0x402109a8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x40210a08" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="70:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0x40334480" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0x40334590" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0x403345f0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0x40334650" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407ca798" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timezone" loc="57:/usr/include/i386-linux-gnu/sys/time.h" ref="0x405be458" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x405be7b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x405be810" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h" ref="0x40a2b120" defined="" size="I:10" alignment="I:1">
      <field name="options" ref="0x40a2b230" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_ctp_options_t" ref="0x40a2ddc8"/></typename>
        </type-int>
      </field>
      <field name="thl" ref="0x40a2b290" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
      <field name="etx" ref="0x40a2b2f0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
      <field name="origin" ref="0x40a2b350" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x40a2b3b0" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="originSeqNo" ref="0x40a2b410" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x40a2b470" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_collection_id_t" ref="0x40a33ce0"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x40a2b4d0" bit-offset="I:80" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <union name="wait" loc="67:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0x40330b78" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x40333010" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0x40333070" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40334480"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0x403330d0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40334cd0"/></type-tag>
      </field>
    </union>
    <struct loc="65:/usr/include/i386-linux-gnu/sys/select.h" ref="0x4035fe88" defined="" size="I:128" alignment="I:4">
      <field name="__fds_bits" ref="0x4035ff98" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="long" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__fd_mask" ref="0x4035f768"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.h" ref="0x4020de00" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x4020df10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct ref="0x4002af48" size="V:" alignment="V:">
    </struct>
    <struct name="sim_event" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_event_queue.h" ref="0x40535060" defined="" size="I:28" alignment="I:4">
      <field name="time" ref="0x40534328" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x40534388" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="force" ref="0x405343e8" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x40534448" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x405344a8" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x40534508" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x40534578" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x404c9ad0" size="V:" alignment="V:">
    </struct>
    <enum loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h" ref="0x406e7f40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd9190" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="39:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40367040" defined="" size="I:36" alignment="I:4">
      <field name="__size" ref="0x40367150" bit-offset="I:0" size="I:36">
        <type-array elements="I:36" size="I:36" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x403671b0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="101:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd7628" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x40bd7738" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x40bd7798" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x40bd77f8" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x40bd7858" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x40bd78b8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="tossim_footer" loc="14:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimRadioMsg.h" ref="0x406e8d80" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x406e7118" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x40303018"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="208:/usr/include/libio.h" ref="0x404d36f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_packet.h" ref="0x406df3f8" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Collection.h" ref="0x40a330c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="136:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd2040" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x40bd2150" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x40bd21b0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x40bd2210" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x40bd2270" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x40bd22d0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x40bd2330" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x40bd2390" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x40bd23f0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="150:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd1cd0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40bd1de0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40bd1e40" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bd1788"/></type-tag>
      </field>
    </union>
    <enum loc="144:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407c2b50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="193:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bf5aa8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40bf5bb8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40bf5c18" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bf5670"/></type-tag>
      </field>
    </union>
    <struct loc="253:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40befe88" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x40beff98" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x40bee010" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x40bee070" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x40bee0d0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="CollectionDebugMsg" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h" ref="0x40a6d980" defined="" size="I:9" alignment="I:1">
      <field name="type" ref="0x40a8d7f0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x40a8d850" bit-offset="I:8" size="I:6">
        <type-tag size="I:6" alignment="I:1"><nx_union-ref ref="0x40a8d270"/></type-tag>
      </field>
      <field name="seqno" ref="0x40a8d8b0" bit-offset="I:56" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="__pthread_internal_slist" loc="46:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x403674f0" defined="" size="I:4" alignment="I:4">
      <field name="__next" ref="0x403678e8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x403674f0"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="133:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd2590" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40bd26a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40bd2700" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bd2040"/></type-tag>
      </field>
    </union>
    <struct loc="144:/usr/include/i386-linux-gnu/bits/types.h" ref="0x40348810" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x40348920" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="137:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h" ref="0x406f5f40" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x406f4258" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="93:/usr/include/i386-linux-gnu/sys/time.h" ref="0x405bcd20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/tos.h" ref="0x40541010" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="138:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407c2580" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="26:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h" ref="0x406e9ad0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c" ref="0x40549e78" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="14:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h" ref="0x406e9760" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="84:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40369b70" defined="" size="I:48" alignment="I:4">
      <field name="__data" ref="0x40369c80" bit-offset="I:0" size="I:44">
        <type-tag size="I:44" alignment="I:4"><struct-ref ref="0x40369360"/></type-tag>
      </field>
      <field name="__size" ref="0x40369ce0" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40369d40" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <attribute name="hwevent"  loc="NONE" ref="0x40033448" size="V:" alignment="V:">
    </attribute>
    <struct name="_IO_FILE" loc="273:/usr/include/libio.h" ref="0x404c2948" defined="" size="I:148" alignment="I:4">
      <field name="_flags" ref="0x404d09a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x404d0a00" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x404d0a60" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x404d0ac0" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x404d0b20" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x404d0b80" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x404d0be0" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x404d0c40" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x404d0ca0" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x404d0d00" bit-offset="I:288" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x404d0d60" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x404d0dc0" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x404d0e20" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0x404c9f50"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x404d0f00" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x404d0f60" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x404ce010" bit-offset="I:480" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x404ce070" bit-offset="I:512" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0x40348048"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x404ce0d0" bit-offset="I:544" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x404ce130" bit-offset="I:560" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x404ce190" bit-offset="I:568" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x404ce1f0" bit-offset="I:576" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x404c9d78"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x404ce250" bit-offset="I:608" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x403482c8"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x404ce2b0" bit-offset="I:672" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x404ce310" bit-offset="I:704" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x404ce370" bit-offset="I:736" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x404ce4d0" bit-offset="I:768" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x404ce530" bit-offset="I:800" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0x40034498"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x404ce590" bit-offset="I:832" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x404ce5f0" bit-offset="I:864" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="hashtable" ref="0x40541710" size="V:" alignment="V:">
    </struct>
    <struct loc="106:/usr/include/stdlib.h" ref="0x40337190" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x403372a0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x40337300" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="heap" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/heap.h" ref="0x4057fdd0" defined="" size="I:12" alignment="I:4">
      <field name="size" ref="0x4057d240" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x4057d2a0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x4057d300" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="neighbor_table_entry" loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h" ref="0x40a5f010" defined="" size="I:12" alignment="I:2">
      <field name="ll_addr" ref="0x40a5fe08" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
        </type-int>
      </field>
      <field name="lastseq" ref="0x40a5fe68" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="rcvcnt" ref="0x40a5fec8" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="failcnt" ref="0x40a5ff28" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x40a5ff88" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="inquality" ref="0x40a5e010" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="etx" ref="0x40a5e070" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
      <field name="data_success" ref="0x40a5e0d0" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="data_total" ref="0x40a5e130" bit-offset="I:88" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x40033d90" size="V:" alignment="V:">
    </attribute>
    <enum loc="7:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h" ref="0x40a73010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_marker" loc="188:/usr/include/libio.h" ref="0x404c9f50" defined="" size="I:12" alignment="I:4">
      <field name="_next" ref="0x404d3490" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0x404c9f50"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x404d34f0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x404d3550" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="141:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40371958" defined="" size="I:8" alignment="I:4">
      <field name="__size" ref="0x40371c68" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40371cc8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union loc="101:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x4036e2f0" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x4036e400" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4036e460" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="126:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407c3810" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h" ref="0x40a65890" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="211:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bf44e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="random_data" loc="349:/usr/include/stdlib.h" ref="0x40372010" defined="" size="I:28" alignment="I:4">
      <field name="fptr" ref="0x40372920" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x40214d98"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x40372980" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x40214d98"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x403729e0" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x40214d98"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x40372a40" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x40372aa0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x40372b00" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x40372b60" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x40214d98"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bdbb30" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x4065ae60" defined="" size="I:44" alignment="I:4">
      <field name="tm_sec" ref="0x40658a08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x40658a68" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x40658ac8" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x40658b28" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x40658b88" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x40658be8" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x40658c48" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x40658ca8" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x40658d08" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x40658d68" bit-offset="I:288" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_zone" ref="0x40658dc8" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c" ref="0x405482c8" defined="" size="I:8" alignment="I:4">
      <field name="num" ref="0x40548698" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x405486f8" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/>
              <typename><typedef-ref name="FILE" ref="0x404c2b88"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <union loc="312:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40be68e0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40be69f0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40be6a50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40be63f0"/></type-tag>
      </field>
    </union>
    <enum loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h" ref="0x40a604c8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407c1bc0" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x407c1cd0" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x407c1d30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x407c1d90" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x407c1df0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x407c1e50" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x407c1eb0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="radio_stats" loc="110:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h" ref="0x406f8228" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x406f7408" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x406f7468" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x406f74c8" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x406f7528" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x406f7588" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x406f75e8" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x406f7648" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x406f76a8" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x406f7708" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x406f7768" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x406f77c8" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40212da8" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x40212f80" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40213340" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x402135c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x40213628" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x40213688" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="48:/usr/include/ctype.h" ref="0x404ae988" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atleastonce" loc="98:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/tos.h" ref="0x40541210" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union loc="75:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x4036b508" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x4036b618" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4036b678" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="itimerval" loc="109:/usr/include/i386-linux-gnu/sys/time.h" ref="0x405ca540" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0x405ca978" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0x4035aec8"/></type-tag>
      </field>
      <field name="it_value" ref="0x405ca9d8" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0x4035aec8"/></type-tag>
      </field>
    </struct>
    <enum loc="25:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h" ref="0x40712db8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="85:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0x40334cd0" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0x40334de0" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0x40334e40" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40212328" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x402124d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <nx_struct loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h" ref="0x40a8f8d0" defined="" size="I:5" alignment="I:1">
      <field name="parent" ref="0x40a8f9e0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="hopcount" ref="0x40a8fa40" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
      <field name="metric" ref="0x40a8faa0" bit-offset="I:24" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="sigevent" ref="0x40656550" size="V:" alignment="V:">
    </struct>
    <struct loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407c58f0" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x407c5a00" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x407c5a60" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x407c5ac0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40212840" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x40212a18" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="65:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40366470" defined="" size="I:4" alignment="I:4">
      <field name="__spins" ref="0x40366580" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__list" ref="0x403665e0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x403674f0"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0x403679a0"/></typename>
        </type-tag>
      </field>
    </union>
    <nx_struct name="linkest_footer" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h" ref="0x40a62e18" defined="" size="I:3" alignment="I:1">
      <field name="neighborList" ref="0x40a602c0" bit-offset="I:0" size="I:3">
        <type-array elements="I:1" size="I:3" alignment="I:1">
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="neighbor_stat_entry" ref="0x40a62618"/>
            <typename><typedef-ref name="neighbor_stat_entry_t" ref="0x40a62bf8"/></typename>
          </type-tag>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/tos.h" ref="0x40522890" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h" ref="0x405c4358" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_union loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h" ref="0x40a8d270" defined="" size="I:6" alignment="I:1">
      <field name="arg" ref="0x40a8d380" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x40a8d3e0" bit-offset="I:0" size="I:6">
        <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x40a8f168"/></type-tag>
      </field>
      <field name="route_info" ref="0x40a8d440" bit-offset="I:0" size="I:5">
        <type-tag size="I:5" alignment="I:1"><nx_struct-ref ref="0x40a8f8d0"/></type-tag>
      </field>
      <field name="dbg" ref="0x40a8d4a0" bit-offset="I:0" size="I:6">
        <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x40a8ff40"/></type-tag>
      </field>
    </nx_union>
    <struct name="__locale_data" ref="0x403139d0" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x40033728" size="V:" alignment="V:">
    </attribute>
    <union loc="120:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd4e08" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40bd4f18" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40bd4f78" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bd49e8"/></type-tag>
      </field>
    </union>
    <struct loc="98:/usr/include/stdlib.h" ref="0x40333ba0" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x40333cb0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x40333d10" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="162:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40370be8" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x40370cf8" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40370d58" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="170:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bf7b58" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x40bf7c68" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x40bf7cc8" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x40bf7d28" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x40bf7d88" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40bf7de8" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x40bf7e48" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="68:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h" ref="0x40a7acf8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407b36a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="unsafe"  loc="NONE" ref="0x40033ef8" size="V:" alignment="V:">
    </attribute>
    <union loc="156:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40370508" defined="" size="I:20" alignment="I:4">
      <field name="__size" ref="0x40370618" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40370678" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h" ref="0x403eaf00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="132:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407c3e80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0x402140f8" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x402142d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="86:/usr/include/wchar.h" ref="0x404cd560" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x404cd670" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x404cd6d0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <struct name="_IO_FILE_plus" ref="0x404ce9e0" size="V:" alignment="V:">
    </struct>
    <struct loc="118:/usr/include/stdlib.h" ref="0x403377c0" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0x403378d0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x40337930" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="exception" loc="321:/usr/include/math.h" ref="0x404afa48" defined="" size="I:32" alignment="I:4">
      <field name="type" ref="0x404ae010" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x404ae070" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x404ae0d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x404ae130" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x404ae190" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <enum loc="203:/usr/include/math.h" ref="0x404a5070" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_log_channel" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c" ref="0x405489c8" defined="" size="I:16" alignment="I:4">
      <field name="name" ref="0x40547010" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x40547070" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x405470d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x40547130" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/>
              <typename><typedef-ref name="FILE" ref="0x404c2b88"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c" ref="0x40547328" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h" ref="0x407c0660" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="neighbor_stat_entry" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h" ref="0x40a62618" defined="" size="I:3" alignment="I:1">
      <field name="ll_addr" ref="0x40a62ae0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="inquality" ref="0x40a62b40" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <attribute name="C"  loc="NONE" ref="0x400332e0" size="V:" alignment="V:">
    </attribute>
    <struct loc="288:/usr/include/inttypes.h" ref="0x40220380" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0x40220490" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x402204f0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <union loc="68:/usr/include/stdlib.h" ref="0x403334e8" defined="" size="I:4" alignment="I:4">
      <field name="__uptr" ref="0x403335f8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0x40330b78"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0x40333658" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <struct loc="121:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x4036d8d8" defined="" size="I:32" alignment="I:4">
      <field name="__lock" ref="0x4036d9e8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x4036da48" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x4036daa8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x4036db08" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x4036db68" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x4036dbc8" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__flags" ref="0x4036dc28" bit-offset="I:192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__shared" ref="0x4036dc88" bit-offset="I:200" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad1" ref="0x4036dce8" bit-offset="I:208" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad2" ref="0x4036dd48" bit-offset="I:216" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__writer" ref="0x4036dda8" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_noise_hash_t" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h" ref="0x405d2350" defined="" size="I:480" alignment="I:4">
      <field name="key" ref="0x405d2c80" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x405d2ce0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x405d2d40" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x405d2da0" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x405d2e00" bit-offset="I:256" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x405d2e60" bit-offset="I:288" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <attribute name="macro"  loc="NONE" ref="0x40033a58" size="V:" alignment="V:">
      <field name="macro_name" ref="0x40033b68" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h" ref="0x40a74160" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="82:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd9920" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h" ref="0x407b5720" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="18:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h" ref="0x40a314f8" defined="" size="I:6" alignment="I:2">
      <field name="parent" ref="0x40a31608" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
        </type-int>
      </field>
      <field name="etx" ref="0x40a31668" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
        </type-int>
      </field>
      <field name="haveHeard" ref="0x40a316c8" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
      <field name="congested" ref="0x40a31728" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="27:/usr/include/_G_config.h" ref="0x404cc5e8" defined="" size="I:16" alignment="I:4">
      <field name="__pos" ref="0x404cc6f8" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x403482c8"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x404cc758" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x404cd850"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x404cda78"/></typename>
        </type-tag>
      </field>
    </struct>
    <struct loc="153:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bd1788" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x40bd1898" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x40bd18f8" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x40bd1958" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x40bd19b8" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x40bd1a18" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x40bd1a78" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x40bd1ad8" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x40bd1b38" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="message_t" loc="14:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/message.h" ref="0x406f3930" defined="" size="I:41" alignment="I:1">
      <field name="header" ref="0x406f14f8" bit-offset="I:0" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x406f1558" bit-offset="I:56" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x406f15b8" bit-offset="I:280" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x406f1618" bit-offset="I:296" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimRadioMsg.h" ref="0x406e8118" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x406e8940" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x406e89a0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x406e8a00" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x406e8a60" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x406ebc80"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x406e8ac0" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x406eb8e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="29:/usr/include/i386-linux-gnu/bits/sigset.h" ref="0x4035a318" defined="" size="I:128" alignment="I:4">
      <field name="__val" ref="0x4035a428" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="196:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bf5670" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x40bf5780" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x40bf57e0" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x40bf5840" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x40bf58a0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="83:/usr/include/wchar.h" ref="0x404cd850" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x404cd960" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x404cd9c0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x404cd560"/></type-tag>
      </field>
    </struct>
    <enum loc="104:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407c5cd8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="231:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bf1c30" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40bf1d40" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40bf1da0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bf1798"/></type-tag>
      </field>
    </union>
    <union loc="250:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bee2c0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40bee3d0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40bee430" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40befe88"/></type-tag>
      </field>
    </union>
    <struct name="sim_noise_node_t" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h" ref="0x405d1218" defined="" size="I:68" alignment="I:4">
      <field name="key" ref="0x405d0158" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x405d01b8" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x405d0218" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x405d0278" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x405d02d8" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x40541710"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x405d0338" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x405d0398" bit-offset="I:448" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x405d03f8" bit-offset="I:480" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x405d0458" bit-offset="I:512" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="315:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40be63f0" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x40be6500" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x40be6560" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x40be65c0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x40be6620" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x40be6680" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x40be66e0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40be6740" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="22:/usr/include/_G_config.h" ref="0x404cdef0" defined="" size="I:12" alignment="I:4">
      <field name="__pos" ref="0x404cc050" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0x40348048"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x404cc0b0" bit-offset="I:32" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x404cd850"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x404cda78"/></typename>
        </type-tag>
      </field>
    </struct>
    <nx_struct name="linkest_header" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h" ref="0x40a65d28" defined="" size="I:2" alignment="I:1">
      <field name="flags" ref="0x40a62188" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x40a621e8" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h" ref="0x40a8ff40" defined="" size="I:6" alignment="I:1">
      <field name="a" ref="0x40a8d070" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
      <field name="b" ref="0x40a8d0d0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
      <field name="c" ref="0x40a8d130" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="297:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40be8398" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40be84a8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40be8508" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40be9e40"/></type-tag>
      </field>
    </union>
    <struct loc="234:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40bf1798" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x40bf18a8" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x40bf1908" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40bf1968" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x40bf19c8" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x40bf1a28" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="86:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40369360" defined="" size="I:44" alignment="I:4">
      <field name="__lock" ref="0x40369470" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x403694d0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x40369530" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x40369590" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x403695f0" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x40369650" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x403696b0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x40369710" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="673:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h" ref="0x4077d7c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x400335b8" size="V:" alignment="V:">
    </attribute>
    <enum loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407ca190" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40213a18" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x40213ca0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x40213d00" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x40213d60" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_mutex_s" loc="56:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40367c10" defined="" size="I:24" alignment="I:4">
      <field name="__lock" ref="0x40366740" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x403667a0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x40366800" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x40366860" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x403668c0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x40366920" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__list" ref="0x40366980" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x403674f0"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0x403679a0"/></typename>
        </type-tag>
      </field>
    </struct>
    <nx_struct name="EasyCollectionMsg" loc="18:EasyCollectionC.nc" ref="0x407462f8" defined="" scoped="" size="I:2" alignment="I:1">
      <component-ref qname="EasyCollectionC"/>
      <field name="data" ref="0x40746608" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x407119e0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc" ref="0x408f7cf0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc" ref="0x40996010" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc" ref="0x40945630" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc" ref="0x40991320" defined="" scoped="" size="I:48" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x409903e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x40990440" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x409904a0" bit-offset="I:96" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x40990500" bit-offset="I:160" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x40990560" bit-offset="I:224" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x409905c0" bit-offset="I:288" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x40214918"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x40990620" bit-offset="I:296" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x40990680" bit-offset="I:304" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x409906e0" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
            <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x40990740" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x40991320"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40991600"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="305:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc" ref="0x40f22f40" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="424:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc" ref="0x40f22628" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="102:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpP.nc" ref="0x40a7b2b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CtpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="239:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc" ref="0x40b54120" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="195:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc" ref="0x40aaf5a8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="180:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc" ref="0x40ab04b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc" ref="0x40bba900" defined="" scoped="" size="I:6" alignment="I:2">
      <component-ref qname="LruCtpMsgCacheP"/>
      <field name="origin" ref="0x40bbaa10" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
        </type-int>
      </field>
      <field name="seqno" ref="0x40bbaa70" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x40bbaad0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
        </type-int>
      </field>
      <field name="thl" ref="0x40bbab30" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc" ref="0x40cf5a80" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40d04858" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x40c0cc90" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40cfb940" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x40cfba50" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x40cfbab0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x40cfbb10" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x40cfbb70" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x40cfbbd0" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40cfdbd0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc" ref="0x40d4a110" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="140:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc" ref="0x40df1c38" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueP.nc" ref="0x40df3720" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="184:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc" ref="0x40df1320" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc" ref="0x40deb3d8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x40deb4e8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
            <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
  </tags>
  <variables>
    <variable name="randCM" ref="0x4064a5b8" loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x406bb700" loc="283:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x405cd970" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="test" ref="0x4064aab0" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__timezone" ref="0x4065dc00" loc="278:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="channelTable" ref="0x40547ef8" loc="68:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x40541710"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x40671968" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:68000" alignment="I:4">
        <type-tag size="I:68" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0x405d1218"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x405d0510"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x40547c40" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c">
      <type-array elements="I:318" size="I:2544" alignment="I:4">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0x405482c8"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x405487b0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x4065d7c0" loc="276:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x4064a158" loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x4066e7d0" loc="292:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x405b2550" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0x4057fdd0"/>
        <typename><typedef-ref name="heap_t" ref="0x4057d3b8"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x40601990" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x40672c18" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randC" ref="0x4064a2c8" loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x40671598" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
    <variable name="csmaLow" ref="0x405f3510" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x405f3db8" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x40671298" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x4066e5b0" loc="291:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x40601110" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x404cec90" loc="348:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x404ce9e0"/></type-tag>
    </variable>
    <variable name="randCD" ref="0x4064a440" loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="j97" ref="0x4064a8d8" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x40522e28" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x40527f18" loc="28:/usr/include/i386-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="tzname" ref="0x4065deb0" loc="283:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x405882a0" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x40030128"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x404d8308" loc="350:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x404ce9e0"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x405f3298" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x406013f0" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x407a8768" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x40617ab0" loc="10:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:4">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0x40618db8"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x40617270"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x404d8010" loc="349:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x404ce9e0"/></type-tag>
    </variable>
    <variable name="csmaInitLow" ref="0x405f3010" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x40671010" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_ticks" ref="0x405cd728" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
      </type-int>
    </variable>
    <variable name="__daylight" ref="0x4065d9d0" loc="277:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x404e1728" loc="171:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x40617698" loc="9:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:4004" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x4060d930"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x4060c010"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x40527c60" loc="27:/usr/include/i386-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x404e1208" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x405f02b8" loc="183:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x405cdb70" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x404af868" loc="308:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x404a5a90"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x404af580"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x40617ca8" loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x404a6ed0" loc="162:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x405f4d00" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdout" ref="0x404e1498" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x40601c30" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x405f37f0" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x406016d8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x405f3ad0" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x4064a780" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="packet" ref="0x40756dd8" loc="15:EasyCollectionC.nc">
      <component-ref qname="EasyCollectionC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
        <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
      </type-tag>
    </variable>
    <variable name="sendBusy" ref="0x40746010" loc="16:EasyCollectionC.nc">
      <component-ref qname="EasyCollectionC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x4070fad0" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x4070f518" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x4070f308" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x4070f7f8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:10" size="I:10" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x4070fe40" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
        <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x408b5470" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
          <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x408b5010" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x408b0d38" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x408b51f8" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x408f2770" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
        <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x408f2a00" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
          <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x40941c78" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
        <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x409425f0" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x4097e0a0" loc="294:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x40942bb0" loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x40942e30" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x409410d0" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
          <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x409428a8" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x40941ee8" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
        <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x40941798" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x40941488" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x40941a20" loc="77:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x409b3010" loc="201:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x40993848" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x409b59e8" loc="198:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
        <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x40991128" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x409b36c0" loc="203:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x40990a10" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x40991320"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40991600"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x409b3328" loc="202:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
          <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x409b5c10" loc="200:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x40993d40" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x40993628" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
          <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x40993a60" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x40a02828" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x40a02600" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x40a02330" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="loopbackMsgPtr" ref="0x40aadc78" loc="214:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
          <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="forwardingState" ref="0x40aaf1a8" loc="189:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="clientPtrs" ref="0x40aad528" loc="205:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40a74b40"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40a74dc8"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="clientEntries" ref="0x40aaff00" loc="204:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40a74b40"/>
          <typename><typedef-ref name="fe_queue_entry_t" ref="0x40a74dc8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="loopbackMsg" ref="0x40aad790" loc="213:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
        <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
      </type-tag>
    </variable>
    <variable name="seqno" ref="0x40aaf468" loc="193:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="index" ref="0x40b7b4f8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x40b7ba28" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40b7d408"/></type-var>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="free" ref="0x40b7b2f0" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="pool" ref="0x40b7bce0" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40b7d408"/></type-var>
      </type-array>
    </variable>
    <variable name="tail" ref="0x40b885c0" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x40b88868" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x40b88118" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40b8db10"/></type-var>
      </type-array>
      <attribute-value>
        <attribute-ref name="one_nok" ref="0x40212da8"/>
        <value-structured>
          <type-tag size="I:4" alignment="I:4"><attribute-ref name="one_nok" ref="0x40212da8"/></type-tag>
        </value-structured>
      </attribute-value>
    </variable>
    <variable name="head" ref="0x40b88318" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="count" ref="0x40bb9340" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="LruCtpMsgCacheP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="cache" ref="0x40bbaf10" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="LruCtpMsgCacheP"/>
      <type-array elements="U:" size="U:" alignment="I:2">
        <type-tag size="I:6" alignment="I:2"><struct-ref scoped="" ref="0x40bba900"/>
          <typename><typedef-ref name="ctp_packet_sig_t" scoped="" ref="0x40bbabe8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="first" ref="0x40bb9138" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="LruCtpMsgCacheP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0x40c0cb50" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x40c0c7d0" loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x40c0c5d8" loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x40c0c920" loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x40c76198" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x40c4be80" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x40cbf8b8" loc="480:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
          <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x40c635a8" loc="185:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
          <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x40c4d3c8" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x40c4d0d0" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x40ced708" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x40ced920" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x40cfa270" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x40cfa010" loc="68:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x40cfb940"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x40cfbc88"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="prevSentIdx" ref="0x40d470d8" loc="101:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="NeighborTable" ref="0x40d49b38" loc="95:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-array elements="I:10" size="I:120" alignment="I:2">
        <type-tag size="I:12" alignment="I:2"><struct-ref name="neighbor_table_entry" ref="0x40a5f010"/>
          <typename><typedef-ref name="neighbor_table_entry_t" ref="0x40a5e1e8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="linkEstSeq" ref="0x40d49d80" loc="97:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0x40deb7b8" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x40debc10" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref scoped="" ref="0x40deb3d8"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x40deb5a0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x40dea148" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="routingTableDescendantsActive" ref="0x40e51970" loc="176:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="t" ref="0x40e4cf28" loc="212:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
    <variable name="parentChanges" ref="0x40e4e110" loc="192:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
    <variable name="ECNOff" ref="0x40e560f8" loc="142:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="routingTableDescendants" ref="0x40e51678" loc="175:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:2">
        <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x40a31cb8"/>
          <typename><typedef-ref name="routing_table_entry" ref="0x40a31ee0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="routingTableActive" ref="0x40e4fe78" loc="189:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="radioOn" ref="0x40e563b8" loc="146:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="state_is_root" ref="0x40e55250" loc="157:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="currentInterval" ref="0x40e4cc10" loc="211:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
    <variable name="beaconMsgBuffer" ref="0x40e55720" loc="160:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
        <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
      </type-tag>
    </variable>
    <variable name="beaconMsg" ref="0x40e559f8" loc="161:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:5" alignment="I:1"><nx_struct-ref ref="0x40a29110"/>
          <typename><typedef-ref name="ctp_routing_header_t" ref="0x40a293f8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sending" ref="0x40e56948" loc="151:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="running" ref="0x40e56680" loc="149:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="routeInfo" ref="0x40e55010" loc="156:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-tag size="I:6" alignment="I:2"><struct-ref ref="0x40a314f8"/>
        <typename><typedef-ref name="route_info_t" ref="0x40a317e0"/></typename>
      </type-tag>
    </variable>
    <variable name="sonsTableActive" ref="0x40e54068" loc="165:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </variable>
    <variable name="routingTable" ref="0x40e4fbf0" loc="188:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:2">
        <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x40a31cb8"/>
          <typename><typedef-ref name="routing_table_entry" ref="0x40a31ee0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="my_ll_addr" ref="0x40e554a0" loc="158:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
      </type-int>
    </variable>
    <variable name="justEvicted" ref="0x40e56c38" loc="154:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="sonsTable" ref="0x40e55dd0" loc="164:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:2">
        <type-tag size="I:204" alignment="I:2"><struct-ref ref="0x40a2f5f0"/>
          <typename><typedef-ref name="sons_table_entry" ref="0x40a2f878"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="tHasPassed" ref="0x40e4b158" loc="213:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </variable>
    <variable name="seed" ref="0x40f36a68" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </variable>
  </variables>
  <constants>
    <constant cst="I:7" name="SENDDONE_OK_OFFSET" ref="0x40a76010" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACIE" ref="0x407a47d0" loc="1075:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x40798d38" loc="943:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x4079f7a8" loc="1132:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x407a50a8" loc="1058:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x407c6380" loc="85:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x40772778" loc="140:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x4075da60" loc="81:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x4078d648" loc="786:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x407a83a0" loc="1299:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LEDS_LED4" ref="0x4073d010" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x407c21c0" loc="133:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x40bf3e20" loc="222:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x407c77e0" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x40778430" loc="705:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x40799928" loc="924:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x4079f0a8" loc="1126:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x4079d740" loc="1154:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x40799058" loc="919:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x4079be30" loc="1182:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x407a20f8" loc="1093:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x407a1408" loc="1106:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x40785438" loc="876:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x407838f8" loc="902:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x406e5510" loc="99:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x4077ab38" loc="687:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x40785b80" loc="882:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x40796638" loc="961:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x40773428" loc="763:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x407762d8" loc="730:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x407aa3a0" loc="1275:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x404a5c88" loc="298:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x40bf2aa8" loc="227:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="NET_C_FE_FWD_MSG" ref="0x40a700a8" loc="30:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x40787ac0" loc="858:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x40799220" loc="920:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x40bf25d8" loc="225:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x407c9420" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x4076b010" loc="269:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x407770a8" loc="714:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x40788010" loc="839:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x404b57c0" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x40770350" loc="169:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x407989a0" loc="939:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x407ca3c8" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x4079e1e8" loc="1138:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x4079c8a8" loc="1166:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x4076a138" loc="283:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x407960f0" loc="956:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x407b1010" loc="1194:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x407af738" loc="1222:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x40bdb3f8" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x40788a98" loc="847:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x407a37e8" loc="1086:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x4077a5f8" loc="684:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x40769038" loc="298:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x40774ea8" loc="760:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x4078a010" loc="817:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x40792220" loc="1004:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x40bf3258" loc="217:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x4075f650" loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x40788540" loc="844:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x407af3c8" loc="1218:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x407adad0" loc="1246:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x40797ba0" loc="953:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x407c4770" loc="109:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x40bf23c0" loc="224:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x40783730" loc="901:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x40770130" loc="166:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x407b5b70" loc="128:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x40bd97c0" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x40bd8b00" loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x407a1af8" loc="1112:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x40be0a30" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x407751e8" loc="740:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x407a3f18" loc="1092:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x407acdd8" loc="1261:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x404ac0a8" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x406f8038" loc="107:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x4075e0a8" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="MAX_NUM_SONS" ref="0x40a32d88" loc="13:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x40770dd8" loc="182:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x40771888" loc="154:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x405c3338" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x40797640" loc="948:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x40792058" loc="1003:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x4078e9a0" loc="779:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x4078b8f8" loc="811:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INIT_ENTRY" ref="0x40a60ad0" loc="86:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x4078a6c8" loc="821:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x407acc08" loc="1258:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x4078c0f8" loc="794:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x407aae18" loc="1283:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x40793908" loc="997:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x407c6c18" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65" name="NET_C_DBG_2" ref="0x40a6d038" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x40bd9ef0" loc="85:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x4076f670" loc="194:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x4078e270" loc="773:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="SENDDONE_FAIL_WINDOW" ref="0x40a75010" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x4077a0a8" loc="679:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x40776100" loc="727:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x407c9ca0" loc="68:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x407c8398" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x407779a8" loc="721:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x406e6378" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x40790010" loc="1025:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x40bf34a0" loc="218:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x407c2da0" loc="145:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x404a5e00" loc="299:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x405037c8" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x407c1010" loc="146:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x4076b230" loc="272:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x407ab8d0" loc="1267:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x407a9550" loc="1289:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x40790398" loc="1027:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="NET_C_FE_CONGESTION_BEGIN" ref="0x40a6fab0" loc="40:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x4079d010" loc="1148:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x4079b710" loc="1176:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x407b1de0" loc="1204:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x407ae550" loc="1232:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x4078df28" loc="793:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x40798270" loc="933:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x407ae010" loc="1227:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x4078ef08" loc="782:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x407940e0" loc="980:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x407ac6f8" loc="1255:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x40be0c90" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="PINNED_ENTRY" ref="0x40a60d10" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x40790568" loc="1030:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x4075e6f0" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x4075f860" loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x4076c9c0" loc="264:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x40777450" loc="718:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x40be0ef8" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x4076e330" loc="216:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="LEDS_LED7" ref="0x4073d8a8" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x4078cbc0" loc="802:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x407aa730" loc="1277:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x407a9e30" loc="1296:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ETX_THRESHOLD" ref="0x40a326f8" loc="8:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x407797c0" loc="696:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x40787e40" loc="860:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x407a0b00" loc="1123:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x4076d448" loc="238:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x406e5868" loc="104:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x40772560" loc="139:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x4079d1e8" loc="1151:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x407a2ed8" loc="1103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x4075bed0" loc="134:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="AM_COLLECTION_DEBUG" ref="0x40a33780" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Collection.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x407c27b8" loc="139:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x407a03d8" loc="1117:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x4079eab8" loc="1145:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x4079b1d0" loc="1173:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x407b18a0" loc="1201:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x407c2400" loc="134:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x40bdb8e0" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x40bf2840" loc="226:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x405c3c70" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x4076ba98" loc="278:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="CTP_OPT_ECN" ref="0x40a2d840" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x40776bc0" loc="735:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x407abe30" loc="1272:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x407ab710" loc="1266:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x407a9390" loc="1288:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x40788e20" loc="849:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x40788708" loc="845:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x4079a768" loc="912:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x407b5920" loc="127:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="NET_C_TREE_NEW_PARENT" ref="0x40a6e4c8" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x40786e98" loc="873:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x40503f18" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x40791ab0" loc="1022:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="NET_C_TREE_RCV_BEACON" ref="0x40a6ec08" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x407c8c80" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:85" name="NET_C_FE_QUEUE_SIZE" ref="0x40a719d8" loc="26:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x40769260" loc="301:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x40769b00" loc="313:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x404b4010" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x4078f3b0" loc="1040:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="NET_C_FE_NO_ROUTE" ref="0x40a73960" loc="12:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x407a3620" loc="1085:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x4078ac10" loc="826:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x407c3488" loc="121:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x4076d010" loc="232:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x40784db8" loc="894:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x40796f08" loc="968:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x4078bc80" loc="815:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x4075de90" loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x407785f8" loc="706:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x407b2730" loc="1187:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x407b0e48" loc="1215:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x407ad578" loc="1243:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x4076f010" loc="185:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SENDDONE_NOACK_OFFSET" ref="0x40a765f0" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x407709a8" loc="176:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x407979d0" loc="950:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x4076a570" loc="287:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x407cadc8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x407c8a50" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x407c4348" loc="107:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x407aee10" loc="1237:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x40771ed0" loc="163:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x40775ad0" loc="745:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x40772340" loc="136:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x4076cde0" loc="268:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NET_C_FE_SUBSEND_BUSY" ref="0x40a73e28" loc="14:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x4078e600" loc="775:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x40503b60" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x407c8160" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x407c8810" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x405c4570" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="CTP_OPT_ALL" ref="0x40a2da50" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x407c6150" loc="84:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x4078a1b8" loc="818:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x407a30e0" loc="1082:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:80" name="NET_C_FE_SENDQUEUE_EMPTY" ref="0x40a72ce8" loc="21:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x407970e8" loc="945:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x4079fb08" loc="1134:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x4079c1e8" loc="1162:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x40771010" loc="146:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x4076c138" loc="254:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x4075f010" loc="27:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x4075c760" loc="99:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LEDS_LED2" ref="0x407339b8" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x4079f438" loc="1128:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x4079dad0" loc="1156:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x407b21d8" loc="1184:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x407b08f0" loc="1212:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x4079a3d8" loc="910:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x40779ed0" loc="700:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x4078fac0" loc="1044:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x407923f0" loc="1005:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x407a1768" loc="1108:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x40793010" loc="992:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x40773d08" loc="770:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x4077aeb8" loc="689:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x407918e8" loc="1021:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="NET_C_FE_CONGESTED" ref="0x40a6e010" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x40bf6cc0" loc="189:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x40785f20" loc="884:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x407737a8" loc="765:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x407c3690" loc="122:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x40bf3010" loc="216:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x407831d8" loc="896:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x40788370" loc="841:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x407a65a8" loc="1052:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x405c47c8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x407967f8" loc="962:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x4075fc58" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x40798610" loc="937:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x4079cc08" loc="1168:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x407b1370" loc="1196:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x407afa98" loc="1224:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x407ac1e8" loc="1252:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x407a3b78" loc="1088:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x4077a978" loc="686:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x40794638" loc="985:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x407c7150" loc="77:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x404a5188" loc="205:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x4076adf0" loc="295:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="AM_CTP_ROUTING" ref="0x40a2d010" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x40bd84f8" loc="91:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x405c37e8" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x40bdaf18" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x4075c340" loc="93:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x407a5d50" loc="1067:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x407ade60" loc="1248:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x407871d0" loc="851:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x405ca140" loc="99:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x4079a928" loc="913:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x40783570" loc="900:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x407a5628" loc="1063:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x4076f880" loc="197:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x407a1e78" loc="1114:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x4079e578" loc="1142:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x40774b18" loc="756:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="NET_C_TREE_NO_ROUTE" ref="0x40a6e260" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x40776d88" loc="736:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x407ab1d0" loc="1263:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x407745c0" loc="753:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x40774788" loc="754:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x40799e78" loc="929:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x40786940" loc="870:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x4076d238" loc="235:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="NET_C_FE_SENDDONE_FAIL" ref="0x40a70550" loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x407861f8" loc="864:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x407933a0" loc="994:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10000" name="NO_ROUTE_RETRY" ref="0x40a74010" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x4076fee0" loc="210:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x40793ad8" loc="998:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x407a6b08" loc="1055:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x407a42b0" loc="1072:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x4078d480" loc="785:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x4078b3a8" loc="808:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x4078a518" loc="820:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x407a91c0" loc="1285:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x40769488" loc="304:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x40771660" loc="151:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x4076a788" loc="288:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="NET_C_TREE_SENT_BEACON" ref="0x40a6e9a0" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x40797d50" loc="954:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x407a32a0" loc="1083:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x407a27f8" loc="1097:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x407c7e70" loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x407c4988" loc="110:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x404a54b0" loc="209:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x40784848" loc="891:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="NET_C_FE_SENDDONE_FAIL_ACK_SEND" ref="0x40a70aa8" loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x40777d38" loc="723:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="NET_C_FE_SUBSEND_OFF" ref="0x40a73bc0" loc="13:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x4078fe48" loc="1046:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x4076bed0" loc="282:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x40768010" loc="319:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x407a98d0" loc="1291:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x40522a08" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x40503990" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x407bf5c8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SENDDONE_OK_WINDOW" ref="0x40a762f0" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x4079ba90" loc="1178:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x407b01d0" loc="1206:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x407ae8d0" loc="1234:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x407bf148" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x4078cd90" loc="803:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x40bdbd28" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x40775c98" loc="746:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x404af010" loc="300:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x40779270" loc="691:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x40783e40" loc="905:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x407a22b8" loc="1094:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="NET_C_FE_DST_MSG" ref="0x40a702e0" loc="31:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="MAX_RETRIES" ref="0x40a74330" loc="89:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x407b5df8" loc="129:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x40790c60" loc="1034:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x4079f5f8" loc="1131:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="NET_C_FE_CONGESTION_END" ref="0x40a6fd28" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x4078d2b8" loc="784:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x405480b8" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x4075f430" loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="LEDS_LED5" ref="0x4073d2e8" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x407a81d8" loc="1298:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="AM_COLLECTION_DATA" ref="0x40a332c8" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Collection.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x40bd8130" loc="86:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x40bd8910" loc="93:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="NET_C_FE_SENT_MSG" ref="0x40a71c18" loc="28:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x40779b40" loc="698:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x40778270" loc="704:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x4076dc88" loc="250:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x40799768" loc="923:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x407a0e90" loc="1125:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x4079d578" loc="1153:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x4079bc68" loc="1181:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="NET_C_FE_DUPLICATE_QUEUE" ref="0x40a6f298" loc="37:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x40795b68" loc="977:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:206" name="AM_TREE_ROUTING_CONTROL" ref="0x40a320a8" loc="5:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x40795628" loc="974:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x407a1258" loc="1105:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x407c8eb0" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x407859b0" loc="881:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x4076da78" loc="247:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:222" name="NET_C_DEBUG_STARTED" ref="0x40a73220" loc="8:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x40773268" loc="762:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x4076b448" loc="273:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x4076a350" loc="284:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x40776830" loc="733:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x407aa1d8" loc="1274:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="PARENT_SWITCH_THRESHOLD" ref="0x40a32970" loc="9:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x40784498" loc="887:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x407c9628" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x40778ed8" loc="713:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x40785270" loc="875:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x405c4cf0" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x4079e038" loc="1137:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x4079c6f8" loc="1165:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x404b3010" loc="60:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x40797f10" loc="955:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x407b2e18" loc="1193:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x407af588" loc="1221:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:84" name="NET_C_FE_GET_QEPOOL_ERR" ref="0x40a71788" loc="25:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="AM_CTP_DEBUG" ref="0x40a2d420" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x407696b0" loc="307:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x407888d0" loc="846:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x40770570" loc="172:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x4078c658" loc="799:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x40789010" loc="828:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x407898d8" loc="835:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x407743f0" loc="752:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x4078f740" loc="1042:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x40774ce8" loc="759:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x404b5010" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x40790aa0" loc="1033:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x40bda9e8" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x40778988" loc="708:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x4075cb90" loc="105:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x40793568" loc="995:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x407af200" loc="1217:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x407ad908" loc="1245:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x4077dce0" loc="677:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x4077a428" loc="681:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x40771230" loc="149:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x407ca9b8" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x407c5f00" loc="105:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x407a1938" loc="1111:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x407bf348" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x40775740" loc="743:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x407a3d50" loc="1091:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x407c9ee0" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x407a5288" loc="1061:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x407c4dc0" loc="112:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="BEACON_INTERVAL" ref="0x40a322d0" loc="6:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x407c7c40" loc="82:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x4076c578" loc="258:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x40797478" loc="947:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x4079fe68" loc="1136:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x40793e80" loc="1002:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x40772990" loc="141:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x4079c548" loc="1164:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x407b2c68" loc="1192:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x404af190" loc="301:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="VALID_ENTRY" ref="0x40a60688" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="NET_C_TREE_ROUTE_INFO" ref="0x40a6e730" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x4078d9d8" loc="790:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x407aca58" loc="1257:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x407aac68" loc="1282:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="INVALID_ADDR" ref="0x40a324e0" loc="7:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x40793738" loc="996:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:66" name="NET_C_DBG_3" ref="0x40a6d238" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="NET_C_FE_DUPLICATE_CACHE" ref="0x40a6f010" loc="36:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x4078e0a8" loc="772:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="NET_C_FE_QENTRY_POOL_EMPTY" ref="0x40a72340" loc="16:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x4075d220" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x407777e0" loc="720:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x40792b00" loc="1011:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x4077a268" loc="680:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="NET_C_FE_SENDDONE_FAIL_ACK_FWD" ref="0x40a70d68" loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x40771cc0" loc="160:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="LOOPY_WINDOW" ref="0x40a75608" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="NUM_ENTRIES_FLAG" ref="0x40a65aa8" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x407b3058" loc="130:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x40bf4700" loc="212:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x404d3c08" loc="212:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x4079ee38" loc="1147:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x4079b550" loc="1175:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x407b1c20" loc="1203:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x407ae390" loc="1231:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x4078bac0" loc="812:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x40798438" loc="934:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x407b16d0" loc="1198:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x4078d0f0" loc="783:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x40795ee8" loc="979:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x407afdf8" loc="1226:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x407ac548" loc="1254:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x4075b460" loc="119:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x407a57f0" loc="1064:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x407c0bc8" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="CONGESTED_WAIT_OFFSET" ref="0x40a759f0" loc="77:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x407942b8" loc="983:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x40bda010" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x407878f8" loc="857:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x40778b58" loc="711:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x40791728" loc="1020:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x4078b1e0" loc="807:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x4076f230" loc="188:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x405c92e8" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x4075b010" loc="111:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x40779600" loc="695:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x40787c80" loc="859:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x4079aca8" loc="915:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x4079ae80" loc="918:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x407a4d20" loc="1078:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x407a0938" loc="1122:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x4076dea8" loc="253:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x407c85d0" loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x4076eba8" loc="226:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x404d3a38" loc="211:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="NET_C_FE_MSG_POOL_EMPTY" ref="0x40a73498" loc="10:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x407a4610" loc="1074:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x40792cc0" loc="1012:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x407a2d28" loc="1102:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x406e5d70" loc="106:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x407c0e98" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x407a0218" loc="1116:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x4079e8f8" loc="1144:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x4079b010" loc="1172:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x407769f8" loc="734:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x407abc68" loc="1271:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x40bf4d50" loc="215:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x407ab550" loc="1265:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x407c4138" loc="106:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x40777288" loc="717:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x40799af8" loc="927:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x40788c60" loc="848:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x4079a5a0" loc="911:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x40786cd0" loc="872:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ELAST" ref="0x405c9878" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x407911e8" loc="1015:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x4078a890" loc="822:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x407c65b0" loc="86:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x407a4990" loc="1076:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x4075ed68" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x40768238" loc="322:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x40bda4e8" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x40796470" loc="960:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x407969a8" loc="963:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x407957e8" loc="975:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x407a3460" loc="1084:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x407c3a98" loc="127:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SENDDONE_NOACK_WINDOW" ref="0x40a768f0" loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x407a61f8" loc="1048:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x4076edc8" loc="229:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x40784be8" loc="893:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x4078add0" loc="827:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x4075d850" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LEDS_LED0" ref="0x40733408" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x4079de60" loc="1158:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x4078d818" loc="789:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x40789c58" loc="837:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x407b2568" loc="1186:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x407b0c80" loc="1214:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x40794b88" loc="988:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x407ad3b0" loc="1242:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x40bf6a80" loc="188:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x40774058" loc="750:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x40797808" loc="949:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x407c9010" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x40796b68" loc="964:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x407950e0" loc="969:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x407b0550" loc="1208:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x407aec50" loc="1236:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x40bf4b30" loc="214:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x4078c828" loc="800:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x404af318" loc="302:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x40775908" loc="744:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x4078f010" loc="1036:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x4076d658" loc="241:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x407a2638" loc="1096:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="NET_C_FE_LOOP_DETECTED" ref="0x40a72818" loc="18:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x40798f00" loc="944:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x407a5f18" loc="1068:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x4079f958" loc="1133:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x4079c038" loc="1161:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x4075c120" loc="90:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LEDS_LED3" ref="0x40733c90" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x4076e120" loc="213:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x4078f578" loc="1041:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x404d3850" loc="210:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x40779d08" loc="699:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x4079f270" loc="1127:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x4079d908" loc="1155:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x407b2010" loc="1183:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x407b0728" loc="1211:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x407a5b88" loc="1066:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x407a15b8" loc="1107:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x40785600" loc="877:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x40783ac0" loc="903:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x40bdb668" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x40773b40" loc="769:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x4077acf8" loc="688:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x407c08d8" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x407c4558" loc="108:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x40786768" loc="867:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x40785d50" loc="883:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x407735e8" loc="764:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x4076bcb0" loc="279:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x407764a0" loc="731:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x405ca360" loc="103:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x407aa568" loc="1276:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x407a9c68" loc="1295:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x407c3010" loc="116:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x40787568" loc="855:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x407993e8" loc="921:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x407c67e0" loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x407c9218" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x40bf3958" loc="220:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="NET_C_FE_CONGESTION_SENDWAIT" ref="0x40a6f820" loc="39:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x407881c0" loc="840:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x40772dc8" loc="145:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x4077d958" loc="675:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x40bda760" loc="68:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x4075b240" loc="116:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x406e5038" loc="97:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x4075fa58" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x404b47c0" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x407987d8" loc="938:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x40791558" loc="1017:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x4079ca58" loc="1167:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x407962b0" loc="957:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x407b11c0" loc="1195:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x407af8e8" loc="1223:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x407ac038" loc="1251:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="NET_C_FE_BAD_SENDDONE" ref="0x40a720a8" loc="15:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x40bf36f8" loc="219:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x407a39b0" loc="1087:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x4077a7b8" loc="685:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x4078ed38" loc="781:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x40789398" loc="830:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x40794478" loc="984:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x4078fc80" loc="1045:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x407b32b8" loc="131:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x407891d0" loc="829:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="LOOPY_OFFSET" ref="0x40a753a0" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="CTP_OPT_PULL" ref="0x40a2d640" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x4076abc8" loc="292:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x407a6ea0" loc="1057:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x4075dc80" loc="84:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x407adc98" loc="1247:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x40787010" loc="850:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x40774950" loc="755:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x404d3df8" loc="213:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x407a6778" loc="1053:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x407a4ef0" loc="1081:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x4075e4e0" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="MAX_METRIC" ref="0x40a32b68" loc="10:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="NET_C_FE_DUPLICATE_CACHE_AT_SEND" ref="0x40a6f570" loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x404ab038" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x407a1cb8" loc="1113:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x406e9ca0" loc="27:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x4079e3b8" loc="1141:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="NET_C_FE_SEND_QUEUE_FULL" ref="0x40a73720" loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x407753b0" loc="741:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x407ab010" loc="1262:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x4076a9a0" loc="289:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x40bd9368" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x406e5ae0" loc="105:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:81" name="NET_C_FE_PUT_MSGPOOL_ERR" ref="0x40a71010" loc="22:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x40771ab0" loc="157:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x4076faa0" loc="202:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x407931d8" loc="993:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x4076c350" loc="255:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x404a5810" loc="213:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x404ad8c8" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x407c3d00" loc="128:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x406e6dc0" loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x4076e550" loc="219:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x4078b570" loc="809:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x4078a368" loc="819:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x407a9010" loc="1284:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x4078c478" loc="796:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="NET_C_DBG_1" ref="0x40a6ee08" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x4075e918" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x4078e438" loc="774:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x40503608" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x404a5668" loc="211:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x40784678" loc="890:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x4075d640" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x40777b70" loc="722:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x407ca010" loc="47:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x40bdb188" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x40791038" loc="1014:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x40790e20" loc="1035:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x407c7380" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FORWARD_PACKET_TIME" ref="0x40a7aba8" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x405c3a48" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x4076b880" loc="277:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x40791398" loc="1016:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x40bf6840" loc="187:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x407b3d20" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x407aba90" loc="1268:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x407a9710" loc="1290:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x407c9a68" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x4078f1d8" loc="1037:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x4078be30" loc="816:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x407a40f0" loc="1071:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x40bda278" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x4079b8d0" loc="1177:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x407b0010" loc="1205:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x407ae710" loc="1233:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x4078dd60" loc="792:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x407980a8" loc="932:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x407ae1c0" loc="1228:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x407ac8a8" loc="1256:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x40770788" loc="173:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x407947f8" loc="986:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x407aaab8" loc="1281:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x40bf3bb8" loc="221:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x40772130" loc="135:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x405c94b8" loc="63:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x40783c80" loc="904:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:318" name="SIM_LOG_OUTPUT_COUNT" ref="0x40547868" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x407952a8" loc="970:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x40bdac80" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x406e6140" loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x40795d28" loc="978:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x4078db98" loc="791:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x40791e20" loc="1024:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x4076fcc0" loc="207:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x4078eb68" loc="780:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x407aa8f8" loc="1278:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="LEDS_LED6" ref="0x4073d5c0" loc="50:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x407a8010" loc="1297:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x40bd9d10" loc="84:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x40779980" loc="697:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x407780b0" loc="703:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x40503d30" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x40786038" loc="861:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x4079a210" loc="909:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x40772bb0" loc="144:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x407995a8" loc="922:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x407a0cc8" loc="1124:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x4079d3b0" loc="1152:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="SENDDONE_FAIL_OFFSET" ref="0x40a76cd0" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x407a10a8" loc="1104:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x407a0598" loc="1118:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x407857e0" loc="880:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x4079ec78" loc="1146:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x407730a8" loc="761:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x4079b390" loc="1174:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x407b1a60" loc="1202:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x404ad118" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x40776668" loc="732:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x407aa010" loc="1273:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x4077dea8" loc="678:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x407842d0" loc="886:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x40778d18" loc="712:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x407c9830" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x407850a8" loc="874:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x40796d38" loc="965:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x4076c798" loc="261:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x4075bcc0" loc="131:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x407908f0" loc="1032:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x40769d28" loc="316:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:82" name="NET_C_FE_PUT_QEPOOL_ERR" ref="0x40a71288" loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="NET_C_FE_SENDDONE_WAITACK" ref="0x40a707e0" loc="33:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x40789e18" loc="838:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x40783010" loc="895:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x40795478" loc="973:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MATURE_ENTRY" ref="0x40a608b8" loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x40791c60" loc="1023:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x4075c550" loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x407787c0" loc="707:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x4078c2b8" loc="795:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x407873a0" loc="854:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x407b28f8" loc="1188:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x407af038" loc="1216:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x407ad740" loc="1244:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x407b38b8" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NET_C_FE_SUBSEND_SIZE" ref="0x40a725a8" loc="17:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x40792e68" loc="1013:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x404a5330" loc="207:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x40bd9b30" loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x407a4460" loc="1073:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x407ca638" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x40bd9578" loc="77:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x40bf65f8" loc="186:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x405c4a78" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x407959a8" loc="976:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x407c6a10" loc="88:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x4075baa0" loc="128:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x407cabc0" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x405d2118" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x407ad010" loc="1238:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x40775578" loc="742:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x407a63d8" loc="1051:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="NET_C_FE_RCV_MSG" ref="0x40a71e50" loc="29:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x4078e7c8" loc="776:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="CONGESTED_WAIT_WINDOW" ref="0x40a75d08" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x40789558" loc="831:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x407a6038" loc="1047:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ETIMEOUT" ref="0x405c96a0" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x407b3b18" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x407972b0" loc="946:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x4079fcb8" loc="1135:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x4079c398" loc="1163:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x407b2ab8" loc="1191:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x406e52a8" loc="98:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x404ac858" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x40786598" loc="866:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x4075fe58" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x4078b730" loc="810:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x407925c0" loc="1006:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x407a6cd8" loc="1056:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x40771448" loc="150:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x40793cb8" loc="1001:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x40773ed0" loc="771:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x407790a8" loc="690:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x40790728" loc="1031:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x4076e770" loc="222:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x40bf4918" loc="213:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x40784108" loc="885:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x405030a8" loc="52:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x40503430" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x40777618" loc="719:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x40773968" loc="766:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x4078aa50" loc="823:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x4076b660" loc="274:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x407833a0" loc="897:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x40bd8708" loc="92:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AM_SERIAL_PACKET" ref="0x406e6b10" loc="95:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x407c29d0" loc="140:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x407a5458" loc="1062:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x406e9960" loc="15:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x407c7a10" loc="81:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x40503268" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x407b1520" loc="1197:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x4078b010" loc="804:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x407afc48" loc="1225:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x407ac398" loc="1253:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x404b37d0" loc="61:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="AM_COLLECTION_CONTROL" ref="0x40a33530" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Collection.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x4075e2c0" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x407a6940" loc="1054:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x4075b670" loc="122:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x40787730" loc="856:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:83" name="NET_C_FE_GET_MSGPOOL_ERR" ref="0x40a71510" loc="24:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x405c9118" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x407c75b0" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x407c6e10" loc="90:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x407a4b58" loc="1077:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x4075c980" loc="102:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x40779440" loc="694:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x4079aae8" loc="914:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x407a0770" loc="1121:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x4076d868" loc="244:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x4076f450" loc="191:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x407a2b78" loc="1101:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x40770bb8" loc="179:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x4076cbd0" loc="267:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x407c4ba0" loc="111:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x407a0058" loc="1115:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x4079e738" loc="1143:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x4079cdd8" loc="1171:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="AM_CTP_DATA" ref="0x40a2d210" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x40775010" loc="737:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x407ab390" loc="1264:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x40799cb8" loc="928:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x40be07e8" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x406e9ed0" loc="28:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x40786b08" loc="871:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x40bf2188" loc="223:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x40789718" loc="834:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x40792790" loc="1007:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x407a59b8" loc="1065:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x4075eb40" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x407698d8" loc="310:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x4075d430" loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x40792950" loc="1010:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x407b34f8" loc="132:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x407a29b8" loc="1098:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x405bcef0" loc="96:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x4078f900" loc="1043:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x40784a18" loc="892:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x40777f00" loc="724:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x4075f220" loc="30:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LEDS_LED1" ref="0x407336e0" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x4075cda0" loc="108:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x407863c8" loc="865:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x4079dc98" loc="1157:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x40789a98" loc="836:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x407b23a0" loc="1185:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x407949c0" loc="987:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x407b0ab8" loc="1213:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x407ad1e8" loc="1241:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x4077db18" loc="676:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x4075d010" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x407a9a90" loc="1292:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="NET_C_FE_SEND_BUSY" ref="0x40a72a60" loc="19:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x40774220" loc="751:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x40522bb8" loc="76:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x407b0390" loc="1207:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x405c3550" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x407aea90" loc="1235:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x4075b880" loc="125:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x40798b70" loc="942:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x4076e988" loc="223:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x4078c9f8" loc="801:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x404ab7e8" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x40775e60" loc="747:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x407901d0" loc="1026:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x4079a038" loc="906:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x40794d50" loc="989:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x407a2478" loc="1095:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x4070f0a8" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="NUM_TASKS" ref="0x40711ec0" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0x40945520" loc="101:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0x408f7be0" loc="145:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0x40945dc8" loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CACHE_SIZE" ref="0x40a7a208" loc="107:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CLIENT_COUNT" ref="0x40a7b7a0" loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="QUEUE_SIZE" ref="0x40a7a010" loc="106:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="FORWARD_COUNT" ref="0x40a7b9b8" loc="104:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="TREE_ROUTING_TABLE_SIZE" ref="0x40a7bc30" loc="105:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="QUEUE_CONGESTED" ref="0x40ab0698" loc="181:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CLIENT_COUNT" ref="0x40aafaa8" loc="196:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ACK_PENDING" ref="0x40ab0c78" loc="184:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendTask" ref="0x40b54010" loc="239:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ROUTING_ON" ref="0x40ab0890" loc="182:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="SENDING" ref="0x40ab0e60" loc="185:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RADIO_ON" ref="0x40ab0a78" loc="183:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x40c0ce18" loc="45:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x40c35010" loc="46:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x40cf5970" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x40cfb010" loc="56:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x40d04748" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x40cfdde8" loc="55:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:70" name="LARGE_ETX_VALUE" ref="0x40d49740" loc="91:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65" name="EVICT_ETX_THRESHOLD" ref="0x40d4a340" loc="69:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLQ_PKT_WINDOW" ref="0x40d494d8" loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="BEST_ETX" ref="0x40d4a748" loc="73:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="MAX_PKT_GAP" ref="0x40d4a560" loc="72:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="VERY_LARGE_ETX_VALUE" ref="0x40d4ae40" loc="78:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DLQ_PKT_WINDOW" ref="0x40d49298" loc="84:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="INVALID_RVAL" ref="0x40d4a958" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="INVALID_NEIGHBOR_ADDR" ref="0x40d4abc0" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ALPHA" ref="0x40d49058" loc="81:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="NUM_CLIENTS" ref="0x40df3c00" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x40df1210" loc="184:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x40df1b28" loc="140:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateRouteTask" ref="0x40f22e30" loc="305:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendBeaconTask" ref="0x40f22518" loc="424:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x4021d340" loc="126:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="intptr_t" ref="0x4021d340"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x406f5d28" loc="135:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x406f5710"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x406f5d28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x40bef560" loc="247:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bf1c30"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x40bef560"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x40370048" loc="151:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x40370048"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x400346c8" loc="324:/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x400346c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x407c5b78" loc="99:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x407c58f0"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x407c5b78"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x40355748" loc="152:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x40355748"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x406e71d0" loc="16:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x406e8d80"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x406e71d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_uint32_t" ref="0x404c9560" loc="56:/usr/include/_G_config.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_uint32_t" ref="0x404c9560"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int64_t" ref="0x40345560" loc="47:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x40345560"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x40347c18" loc="39:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x40347c18"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x406f5508" loc="130:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x406f7a88"/>
        <typename><typedef-ref name="serial_header_t" ref="0x406f5508"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x40736450" loc="42:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40736288"/>
        <typename><typedef-ref name="TMilli" ref="0x40736450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_int16_t" ref="0x404ccb48" loc="53:/usr/include/_G_config.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_int16_t" ref="0x404ccb48"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_char" ref="0x40342ec8" loc="31:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x40342ec8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x40bd6468" loc="111:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x40bd6468"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x40beb068" loc="278:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x40beb068"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x4034e458" loc="189:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__intptr_t" ref="0x4034e458"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x4034e010" loc="185:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x40345a60"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x4034e010"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x40bd6ee0" loc="116:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x40bd6ee0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x4035e068" loc="76:/usr/include/i386-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x4035fe88"/>
        <typename><typedef-ref name="fd_set" ref="0x4035e068"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x4052e110" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x4052e110"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x4034e238" loc="186:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x4034e238"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x4034c5c0" loc="149:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__time_t" ref="0x4034c5c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0x40350a50" loc="180:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ssize_t" ref="0x40350a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x403b4d18" loc="36:/usr/include/i386-linux-gnu/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x403b4d18"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x40352250" loc="71:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x40352250"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x40bee818" loc="262:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bee2c0"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x40bee818"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x404c9d78" loc="182:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x404c9d78"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x4021a048" loc="68:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x4021a048"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x40030028"  loc="NONE">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x4002af48"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x403452f8" loc="42:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x403452f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x40736cd0" loc="44:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40736b08"/>
        <typename><typedef-ref name="TMicro" ref="0x40736cd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x40350568" loc="177:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x40350568"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_ctp_options_t" ref="0x40a2ddc8" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_ctp_options_t" ref="0x40a2ddc8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fe_queue_entry_t" ref="0x40a74dc8" loc="103:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
      <documentation loc="38:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngine.h">
        <short>&#10; Author: Philip Levis&#10; Author: Kyle Jamieson &#10; Author: Omprakash Gnawali&#10; Author: Rodrigo Fonseca&#10;</short>
      </documentation>
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40a74b40"/>
        <typename><typedef-ref name="fe_queue_entry_t" ref="0x40a74dc8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="collection_id_t" ref="0x40a33a18" loc="48:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Collection.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="collection_id_t" ref="0x40a33a18"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x403524a0" loc="76:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="nlink_t" ref="0x403524a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x40356988" loc="60:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clock_t" ref="0x40356988"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x40beddb8" loc="277:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x40beddb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_collection_id_t" ref="0x40a33ce0" loc="49:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Collection.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_collection_id_t" ref="0x40a33ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x4036e518" loc="105:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x4036e2f0"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x4036e518"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x4057d3b8" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0x4057fdd0"/>
        <typename><typedef-ref name="heap_t" ref="0x4057d3b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="linkest_header_t" ref="0x40a622a0" loc="62:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <documentation loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="linkest_header" ref="0x40a65d28"/>
        <typename><typedef-ref name="linkest_header_t" ref="0x40a622a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x40349470" loc="136:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x40349470"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x40303018" loc="446:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x40303018"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x405471e8" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_log_channel" ref="0x405489c8"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x405471e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x4034ed98" loc="36:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x4034ed98"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x4036e9c0" loc="113:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x4036e9c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x40355940" loc="153:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x40355940"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x406e93c0" loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x406e93c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x40beeb48" loc="265:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bee2c0"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x40beeb48"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x4021a548" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x4021a548"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x403489d8" loc="144:/usr/include/i386-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40348810"/>
        <typename><typedef-ref name="__fsid_t" ref="0x403489d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x40beedf0" loc="269:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x40beedf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x40bed610" loc="272:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x40bed610"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x4021ce48" loc="111:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x4021ce48"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x40364178" loc="229:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blksize_t" ref="0x40364178"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x4021a2c8" loc="73:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x4021a2c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x40be6b08" loc="324:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40be68e0"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40be6b08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x403484d8" loc="143:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x403484d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x40347338" loc="33:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x40347338"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x40bd6c68" loc="115:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x40bd6c68"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x40bedb30" loc="276:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x40bedb30"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x405352c8" loc="51:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x40535060"/>
        <typename><typedef-ref name="sim_event_t" ref="0x405352c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x40681010" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403eaf00"/>
        <typename><typedef-ref name="error_t" ref="0x40681010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x4035cd18" loc="24:/usr/include/i386-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x4035cd18"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x40bf6238" loc="178:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bf6010"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x40bf6238"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x4034ccc0" loc="153:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x4034ccc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x403496c0" loc="137:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ino_t" ref="0x403496c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_uint16_t" ref="0x404c9200" loc="55:/usr/include/_G_config.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_uint16_t" ref="0x404c9200"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x40219ba8" loc="66:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x40219ba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x404c2b88" loc="49:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/>
        <typename><typedef-ref name="FILE" ref="0x404c2b88"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x4039dd90" loc="742:/usr/include/stdlib.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x4039dd90"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x403126b8" loc="40:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0x40313838"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x403126b8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x407c0500" loc="161:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x407c0500"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x40349b90" loc="139:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x40349b90"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0x40312930" loc="43:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0x40313838"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x40312930"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x406f7880" loc="122:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x406f8228"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x406f7880"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x40356ef0" loc="92:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x40356ef0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x40bea7b0" loc="291:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x40bea7b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x40be9010" loc="294:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x40be9010"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x40352010" loc="66:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x40352010"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x403536f8" loc="40:/usr/include/i386-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40348810"/>
        <typename><typedef-ref name="fsid_t" ref="0x403536f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x406df5e0" loc="59:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x406df3f8"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x406df5e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x407c0010" loc="158:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x407c1bc0"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x407c0010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x40214918" loc="37:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x40214918"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x405487b0" loc="54:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.c">
      <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0x405482c8"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x405487b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x4035f530" loc="49:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x4035f530"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x4035a758" loc="38:/usr/include/i386-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x4035a318"/>
        <typename><typedef-ref name="sigset_t" ref="0x4035a758"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0x40736890" loc="43:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x407366c8"/>
        <typename><typedef-ref name="T32khz" ref="0x40736890"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x4034eb70" loc="35:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x4034eb70"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x406e8b78" loc="12:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x406e8118"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x406e8b78"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x40034260" loc="150:/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ptrdiff_t" ref="0x40034260"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x40736010" loc="41:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4020de00"/>
        <typename><typedef-ref name="TSecond" ref="0x40736010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x403643f0" loc="236:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blkcnt_t" ref="0x403643f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x402196b0" loc="52:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402196b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x40303968" loc="448:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x40303968"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x40302728" loc="435:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x40302728"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x4021d568" loc="129:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uintptr_t" ref="0x4021d568"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x403564b0" loc="117:/usr/include/i386-linux-gnu/sys/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x403564b0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x40347578" loc="34:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_long" ref="0x40347578"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x4021d110" loc="113:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x4021d110"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x40bed388" loc="271:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x40bed388"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x40347e68" loc="40:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x40347e68"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x4034e920" loc="34:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x4034e920"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x407b67d0" loc="120:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x407b67d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x4021c290" loc="97:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast16_t" ref="0x4021c290"/></typename>
      </type-int>
    </typedef>
    <typedef name="route_info_t" ref="0x40a317e0" loc="23:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-tag size="I:6" alignment="I:2"><struct-ref ref="0x40a314f8"/>
        <typename><typedef-ref name="route_info_t" ref="0x40a317e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x40bed8a8" loc="275:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x40bed8a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x40beb578" loc="280:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x40beb578"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x404e3ed8" loc="111:/usr/include/stdio.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0x404cdef0"/>
        <typename><typedef-ref name="fpos_t" ref="0x404e3ed8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x40bef218" loc="244:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bf1c30"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x40bef218"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x40333dc8" loc="102:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40333ba0"/>
        <typename><typedef-ref name="div_t" ref="0x40333dc8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x40617270" loc="6:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0x40618db8"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x40617270"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x40034498" loc="212:/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="size_t" ref="0x40034498"/></typename>
      </type-int>
    </typedef>
    <typedef name="routing_table_entry" ref="0x40a31ee0" loc="28:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x40a31cb8"/>
        <typename><typedef-ref name="routing_table_entry" ref="0x40a31ee0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uint8_t" ref="0x403479d0" loc="38:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x403479d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x4035a4e0" loc="32:/usr/include/i386-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x4035a318"/>
        <typename><typedef-ref name="__sigset_t" ref="0x4035a4e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="CollectionDebugMsg" ref="0x40a8d968" loc="79:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpDebugMsg.h">
      <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="CollectionDebugMsg" ref="0x40a6d980"/>
        <typename><typedef-ref name="CollectionDebugMsg" ref="0x40a8d968"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x40bd61e8" loc="110:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd7a98"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x40bd61e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x40350ce0" loc="184:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x40350ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x40349950" loc="138:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x40349950"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x406eb8e0" loc="6:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <documentation loc="34:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x406eb8e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x406f4af0" loc="53:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_header" ref="0x406f4520"/>
        <typename><typedef-ref name="message_header_t" ref="0x406f4af0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x4060c010" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x4060d930"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x4060c010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x406e9620" loc="12:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x406e9620"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x402fde50" loc="433:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x402fde50"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x407c0288" loc="160:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x407c0288"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x4021a8c0" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x4021a8c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x404d5578" loc="386:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x404d5578"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0x40219250" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x40219250"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x40356c28" loc="76:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="time_t" ref="0x40356c28"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x40300918" loc="441:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x40300918"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x403379e8" loc="122:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x403377c0"/>
        <typename><typedef-ref name="lldiv_t" ref="0x403379e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="linkest_footer_t" ref="0x40a60378" loc="75:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="linkest_footer" ref="0x40a62e18"/>
        <typename><typedef-ref name="linkest_footer_t" ref="0x40a60378"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0x404ce7f8" loc="343:/usr/include/libio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x404ce7f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x40367268" loc="43:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:36" alignment="I:4"><union-ref ref="0x40367040"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x40367268"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x404d5010" loc="383:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x403482c8"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x404d5010"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x40352b18" loc="99:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x40352b18"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x40355190" loc="104:/usr/include/time.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x40355190"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x40371d80" loc="145:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:4"><union-ref ref="0x40371958"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x40371d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x40bd66e0" loc="112:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x40bd66e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x403457f0" loc="48:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x403457f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x40349010" loc="134:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x40349010"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x40305258" loc="443:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x40305258"/></typename>
      </type-int>
    </typedef>
    <typedef name="neighbor_table_entry_t" ref="0x40a5e1e8" loc="119:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <type-tag size="I:12" alignment="I:2"><struct-ref name="neighbor_table_entry" ref="0x40a5f010"/>
        <typename><typedef-ref name="neighbor_table_entry_t" ref="0x40a5e1e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x404e3c70" loc="80:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x4002af48"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x404e3c70"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__off_t" ref="0x40348048" loc="141:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__off_t" ref="0x40348048"/></typename>
      </type-int>
    </typedef>
    <typedef name="sons_table_entry" ref="0x40a2f878" loc="35:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/TreeRouting.h">
      <type-tag size="I:204" alignment="I:2"><struct-ref ref="0x40a2f5f0"/>
        <typename><typedef-ref name="sons_table_entry" ref="0x40a2f878"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int_fast8_t" ref="0x4021c068" loc="91:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x4021c068"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x4034bab8" loc="169:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blkcnt_t" ref="0x4034bab8"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x406e7af0" loc="22:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x406e73e8"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x406e7af0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_id_t" ref="0x406e9168" loc="10:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x406e9168"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x4021d7c8" loc="139:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x4021d7c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="neighbor_stat_entry_t" ref="0x40a62bf8" loc="70:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/4bitle/LinkEstimator.h">
      <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="neighbor_stat_entry" ref="0x40a62618"/>
        <typename><typedef-ref name="neighbor_stat_entry_t" ref="0x40a62bf8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x40bf1e58" loc="241:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bf1c30"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40bf1e58"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x40bd69e8" loc="114:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd7a98"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x40bd69e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x406f4310" loc="139:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x406f5f40"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x406f4310"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x40350010" loc="173:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x40350010"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x40219490" loc="50:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x40219490"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x404cc168" loc="26:/usr/include/_G_config.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0x404cdef0"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x404cc168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x40355ca8" loc="201:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x40355ca8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x40bed100" loc="270:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x40bed100"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x40bea298" loc="287:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x40bea298"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x406ebc80" loc="7:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x406ebc80"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x4034b5e0" loc="161:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x4034b5e0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x406f3750" loc="61:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/platform_message.h">
      <type-tag size="I:4" alignment="I:1"><union-ref name="message_metadata" ref="0x406f3330"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x406f3750"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x404d76a0" loc="374:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0x40350a50"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0x40034498"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x404d76a0"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x4035e2d8" loc="83:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fd_mask" ref="0x4035e2d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x40300030" loc="437:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x40300030"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x40541978" loc="10:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x40541710"/>
        <typename><typedef-ref name="hashtable_t" ref="0x40541978"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x40353d88" loc="61:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x40353d88"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x40345cf0" loc="57:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x40345cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__swblk_t" ref="0x4034cf08" loc="154:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__swblk_t" ref="0x4034cf08"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x4035c360" loc="203:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x4035c360"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x40364910" loc="244:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x40364910"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x4021c9a8" loc="104:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x4021c9a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim64_t" ref="0x4034c158" loc="147:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x4034c158"/></typename>
      </type-int>
    </typedef>
    <typedef name="ctp_data_header_t" ref="0x40a2b588" loc="80:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-tag size="I:10" alignment="I:1"><nx_struct-ref ref="0x40a2b120"/>
        <typename><typedef-ref name="ctp_data_header_t" ref="0x40a2b588"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__key_t" ref="0x4034b140" loc="155:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x4034b140"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x4034c828" loc="150:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x4034c828"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x40bd3048" loc="130:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd4e08"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x40bd3048"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x40bea010" loc="286:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x40bea010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x404d8cc8" loc="366:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0x40350a50"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0x40034498"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x404d8cc8"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x402fd9f8" loc="432:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x402fd9f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x4021de40" loc="35:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x4021de40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x40beaa30" loc="292:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x40beaa30"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0x4035ca00" loc="206:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="register_t" ref="0x4035ca00"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x40370e10" loc="166:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x40370be8"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x40370e10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x40be85c0" loc="309:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40be8398"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40be85c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x40bd7cc0" loc="108:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd7a98"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40bd7cc0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x40356010" loc="110:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ssize_t" ref="0x40356010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x40345a60" loc="56:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x40345a60"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x40214d98" loc="39:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x40214d98"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x40219920" loc="59:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x40219920"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x40353010" loc="37:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_long" ref="0x40353010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x407bc010" loc="94:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x407bc010"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x404af580" loc="303:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x404a5a90"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x404af580"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x403056d8" loc="444:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x403056d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x40300d98" loc="442:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x40300d98"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x40364b88" loc="36:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_t" ref="0x40364b88"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x4034b848" loc="164:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blksize_t" ref="0x4034b848"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x402205a8" loc="292:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x40220380"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x402205a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x40349dd8" loc="140:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__nlink_t" ref="0x40349dd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x40bf4048" loc="205:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bf5aa8"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x40bf4048"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__id_t" ref="0x4034c380" loc="148:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x4034c380"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least32_t" ref="0x4021ab18" loc="79:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x4021ab18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x404cda78" loc="95:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x404cd850"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x404cda78"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x406f3108" loc="57:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x406f4d00"/>
        <typename><typedef-ref name="message_footer_t" ref="0x406f3108"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x40bebd20" loc="285:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x40bebd20"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0x40333828" loc="72:/usr/include/stdlib.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x403334e8"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0x40333828"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x4034bd58" loc="170:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x4034bd58"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x40364680" loc="240:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x40364680"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x403528f0" loc="87:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="off_t" ref="0x403528f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x40347128" loc="32:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x40347128"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x403022d0" loc="434:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x403022d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x40353250" loc="38:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x40353250"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x4034ca98" loc="151:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__suseconds_t" ref="0x4034ca98"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x40370730" loc="160:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:20" alignment="I:4"><union-ref ref="0x40370508"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x40370730"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x40bee4e8" loc="259:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bee2c0"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x40bee4e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x403477a8" loc="37:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x403477a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x404cc810" loc="31:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x404cc5e8"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x404cc810"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x4034b388" loc="158:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x4034b388"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x4021cbf8" loc="110:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast16_t" ref="0x4021cbf8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x40beba98" loc="284:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x40beba98"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x4021da60" loc="141:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x4021da60"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x406ebf18" loc="8:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x406ebf18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x40348c20" loc="145:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clock_t" ref="0x40348c20"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x40302ba0" loc="436:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x40302ba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x40348e80" loc="146:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__rlim_t" ref="0x40348e80"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x403534b8" loc="39:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x403534b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x4021c4b8" loc="98:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x4021c4b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x40219df8" loc="67:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x40219df8"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x403373b8" loc="110:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40337190"/>
        <typename><typedef-ref name="ldiv_t" ref="0x403373b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x4035c6b0" loc="204:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x4035c6b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x4035c010" loc="202:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x4035c010"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x40bd1ef8" loc="163:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd1cd0"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40bd1ef8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x40bf4390" loc="208:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bf5aa8"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x40bf4390"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x4021adc0" loc="84:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x4021adc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x403450c8" loc="41:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x403450c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_int32_t" ref="0x404cce80" loc="54:/usr/include/_G_config.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_int32_t" ref="0x404cce80"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x40371488" loc="139:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:4"><union-ref ref="0x40371200"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x40371488"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x403bb010" loc="38:/usr/include/i386-linux-gnu/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="double_t" ref="0x403bb010"/></typename>
      </type-float>
    </typedef>
    <typedef name="__fd_mask" ref="0x4035f768" loc="55:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fd_mask" ref="0x4035f768"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x40522710" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x40522710"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x403502d0" loc="174:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x403502d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x405d2f18" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:480" alignment="I:4"><struct-ref name="sim_noise_hash_t" ref="0x405d2350"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x405d2f18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x404c2e28" loc="65:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404c2948"/>
        <typename><typedef-ref name="__FILE" ref="0x404c2e28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x404c98c8" loc="40:/usr/lib/gcc/i686-linux-gnu/4.6/include/stdarg.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x4002af48"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x404c98c8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x40305b58" loc="445:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x40305b58"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x403482c8" loc="142:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x403482c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x40beacb0" loc="293:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x40beacb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x40350828" loc="178:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x40350828"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x40beb810" loc="283:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x40beb810"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x40bea520" loc="288:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x40bea520"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x40219010" loc="44:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x40219010"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x40214ba8" loc="38:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x40214ba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0x40355520" loc="151:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ulong" ref="0x40355520"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x4021c730" loc="100:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x4021c730"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x403526c8" loc="81:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x403526c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x406f16d0" loc="19:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/types/message.h">
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x406f3930"/>
        <typename><typedef-ref name="message_t" ref="0x406f16d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x403004a8" loc="438:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x403004a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x40bd27b8" loc="146:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bd2590"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40bd27b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x40353938" loc="45:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x40353938"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0x4034e6c0" loc="192:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x4034e6c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x40588960" loc="65:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/heap.c">
      <type-tag size="I:12" alignment="I:4"><struct-ref name="node" ref="0x405884f8"/>
        <typename><typedef-ref name="node_t" ref="0x40588960"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x40349240" loc="135:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x40349240"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x402fd5a0" loc="431:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x402fd5a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x405d0510" loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:68" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0x405d1218"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x405d0510"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x40352d30" loc="105:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x40352d30"/></typename>
      </type-int>
    </typedef>
    <typedef name="ctp_routing_header_t" ref="0x40a293f8" loc="87:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-tag size="I:5" alignment="I:1"><nx_struct-ref ref="0x40a29110"/>
        <typename><typedef-ref name="ctp_routing_header_t" ref="0x40a293f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x4036b048" loc="73:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:24" alignment="I:4"><union-ref ref="0x40366da8"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x4036b048"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x405caba8" loc="122:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x405caba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x40369df8" loc="99:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:4"><union-ref ref="0x40369b70"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x40369df8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x4036e778" loc="109:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x4036e778"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x40353b60" loc="49:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ino_t" ref="0x40353b60"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x40356260" loc="116:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x40356260"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x405beac8" loc="63:/usr/include/i386-linux-gnu/sys/time.h">
      <documentation loc="32:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x405beac8"/></typename>
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x405be458"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x403034c0" loc="447:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x403034c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x403566d8" loc="123:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x403566d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x4036b730" loc="79:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x4036b508"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x4036b730"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_slist_t" ref="0x403679a0" loc="49:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x403674f0"/>
        <typename><typedef-ref name="__pthread_slist_t" ref="0x403679a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x406e7d80" loc="83:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x406e7d80"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x40bf5cd0" loc="202:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40bf5aa8"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40bf5cd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ctp_options_t" ref="0x40a2c068" loc="67:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/Ctp.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="ctp_options_t" ref="0x40a2c068"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x40beb2f0" loc="279:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x40beb2f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="EasyCollectionMsg" ref="0x407466c0" loc="20:EasyCollectionC.nc">
      <component-ref qname="EasyCollectionC"/>
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="EasyCollectionMsg" scoped="" ref="0x407462f8"/>
        <typename><typedef-ref name="EasyCollectionMsg" scoped="" ref="0x407466c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x40996208" loc="96:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x40945828" loc="101:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x408f7ee8" loc="145:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x40991600" loc="64:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x40991320"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40991600"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_sendTask" ref="0x40b54318" loc="239:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpForwardingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="ctp_packet_sig_t" ref="0x40bbabe8" loc="58:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="LruCtpMsgCacheP"/>
      <type-tag size="I:6" alignment="I:2"><struct-ref scoped="" ref="0x40bba900"/>
        <typename><typedef-ref name="ctp_packet_sig_t" scoped="" ref="0x40bbabe8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x40cf5c68" loc="74:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x40d04a58" loc="71:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x40cfbc88" loc="66:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x40cfb940"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x40cfbc88"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x40deb5a0" loc="60:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:4" alignment="I:4"><struct-ref scoped="" ref="0x40deb3d8"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x40deb5a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x40df1518" loc="184:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x40df1e30" loc="140:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendBeaconTask" ref="0x40f22820" loc="424:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateRouteTask" ref="0x40f21170" loc="305:/home/user/top/t2_cur/tinyos-2.x/TinyOSCTP/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
